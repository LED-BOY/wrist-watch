
C:\Users\gross\AppData\Local\Temp\arduino_build_342726/Game_Light_watch_3.4.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
../../../../../crt1/gcrt1.S:63
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
../../../../../crt1/gcrt1.S:67
   2:	3f c0       	rjmp	.+126    	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:68
   4:	3e c0       	rjmp	.+124    	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:69
   6:	c3 c2       	rjmp	.+1414   	; 0x58e <__vector_3>
../../../../../crt1/gcrt1.S:70
   8:	3c c0       	rjmp	.+120    	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:71
   a:	3b c0       	rjmp	.+118    	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:72
   c:	3a c0       	rjmp	.+116    	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:73
   e:	65 c2       	rjmp	.+1226   	; 0x4da <__vector_7>
../../../../../crt1/gcrt1.S:74
  10:	9d c2       	rjmp	.+1338   	; 0x54c <__vector_8>
../../../../../crt1/gcrt1.S:75
  12:	37 c0       	rjmp	.+110    	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:76
  14:	36 c0       	rjmp	.+108    	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:77
  16:	35 c0       	rjmp	.+106    	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:78
  18:	34 c0       	rjmp	.+104    	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:79
  1a:	33 c0       	rjmp	.+102    	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:80
  1c:	32 c0       	rjmp	.+100    	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:81
  1e:	31 c0       	rjmp	.+98     	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:82
  20:	30 c0       	rjmp	.+96     	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:83
  22:	2f c0       	rjmp	.+94     	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:84
  24:	2e c0       	rjmp	.+92     	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:85
  26:	2d c0       	rjmp	.+90     	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:86
  28:	2c c0       	rjmp	.+88     	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:87
  2a:	2b c0       	rjmp	.+86     	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:88
  2c:	2a c0       	rjmp	.+84     	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:89
  2e:	29 c0       	rjmp	.+82     	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:90
  30:	28 c0       	rjmp	.+80     	; 0x82 <__bad_interrupt>
../../../../../crt1/gcrt1.S:91
  32:	27 c0       	rjmp	.+78     	; 0x82 <__bad_interrupt>

00000034 <__ctors_end>:
__trampolines_start():
../../../../../crt1/gcrt1.S:230
  34:	11 24       	eor	r1, r1
../../../../../crt1/gcrt1.S:231
  36:	1f be       	out	0x3f, r1	; 63
../../../../../crt1/gcrt1.S:232
  38:	cf ef       	ldi	r28, 0xFF	; 255
../../../../../crt1/gcrt1.S:234
  3a:	cd bf       	out	0x3d, r28	; 61
../../../../../crt1/gcrt1.S:236
  3c:	df e3       	ldi	r29, 0x3F	; 63
../../../../../crt1/gcrt1.S:237
  3e:	de bf       	out	0x3e, r29	; 62

00000040 <_initThreeStuff()>:
_Z15_initThreeStuffv():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/main.cpp:104

  /* Minimum: Reset if we wound up here through malfunction - this relies on user clearing the  *
   * register on startup, which is rarely done in Arduino land.                                 */
  void __attribute__((weak)) init_reset_flags() ;
  void __attribute__((weak)) init_reset_flags() {
    uint8_t flags = RSTCTRL.RSTFR;
  40:	80 91 40 00 	lds	r24, 0x0040	; 0x800040 <numbers+0x7f70b1>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/main.cpp:105
    RSTCTRL.RSTFR = flags;
  44:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <numbers+0x7f70b1>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/main.cpp:106
    if (flags == 0) {
  48:	81 11       	cpse	r24, r1
  4a:	05 c0       	rjmp	.+10     	; 0x56 <_initThreeStuff()+0x16>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/main.cpp:107
      _PROTECTED_WRITE(RSTCTRL.SWRR, 1);
  4c:	98 ed       	ldi	r25, 0xD8	; 216
  4e:	21 e0       	ldi	r18, 0x01	; 1
  50:	94 bf       	out	0x34, r25	; 52
  52:	20 93 41 00 	sts	0x0041, r18	; 0x800041 <numbers+0x7f70b2>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/main.cpp:109
    }
    GPIOR0 = flags;
  56:	8c bb       	out	0x1c, r24	; 28

00000058 <__do_copy_data>:
__do_copy_data():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
  58:	1f e3       	ldi	r17, 0x3F	; 63
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
  5a:	a0 e0       	ldi	r26, 0x00	; 0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
  5c:	bf e3       	ldi	r27, 0x3F	; 63
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
  5e:	e3 ea       	ldi	r30, 0xA3	; 163
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
  60:	ff e0       	ldi	r31, 0x0F	; 15
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
  62:	02 c0       	rjmp	.+4      	; 0x68 <__do_copy_data+0x10>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
  64:	05 90       	lpm	r0, Z+
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
  66:	0d 92       	st	X+, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
  68:	a4 30       	cpi	r26, 0x04	; 4
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
  6a:	b1 07       	cpc	r27, r17
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
  6c:	d9 f7       	brne	.-10     	; 0x64 <__do_copy_data+0xc>

0000006e <__do_clear_bss>:
__do_clear_bss():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
  6e:	2f e3       	ldi	r18, 0x3F	; 63
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
  70:	a4 e0       	ldi	r26, 0x04	; 4
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
  72:	bf e3       	ldi	r27, 0x3F	; 63
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
  74:	01 c0       	rjmp	.+2      	; 0x78 <.do_clear_bss_start>

00000076 <.do_clear_bss_loop>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
  76:	1d 92       	st	X+, r1

00000078 <.do_clear_bss_start>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
  78:	a6 31       	cpi	r26, 0x16	; 22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
  7a:	b2 07       	cpc	r27, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
  7c:	e1 f7       	brne	.-8      	; 0x76 <.do_clear_bss_loop>
.do_clear_bss_start():
../../../../../crt1/gcrt1.S:314
  7e:	b4 d2       	rcall	.+1384   	; 0x5e8 <main>
../../../../../crt1/gcrt1.S:315
  80:	dc c5       	rjmp	.+3000   	; 0xc3a <_exit>

00000082 <__bad_interrupt>:
__vector_22():
../../../../../crt1/gcrt1.S:209
  82:	be cf       	rjmp	.-132    	; 0x0 <__vectors>

00000084 <TinyI2CMaster::stop() [clone .constprop.19]>:
_ZN13TinyI2CMaster4stopEv.constprop.19():
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:310
bool TinyI2CMaster::restart(uint8_t address, int32_t readcount) {
  return TinyI2CMaster::start(address, readcount);
}

void TinyI2CMaster::stop (void) {
  TWI0.MCTRLB |= TWI_MCMD_STOP_gc;                                // Send STOP
  84:	80 91 14 08 	lds	r24, 0x0814	; 0x800814 <numbers+0x7f7885>
  88:	83 60       	ori	r24, 0x03	; 3
  8a:	80 93 14 08 	sts	0x0814, r24	; 0x800814 <numbers+0x7f7885>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:311
  while (!(TWI0.MSTATUS & TWI_BUSSTATE_IDLE_gc));                 // Wait for bus to return to idle state
  8e:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <numbers+0x7f7886>
  92:	80 ff       	sbrs	r24, 0
  94:	fc cf       	rjmp	.-8      	; 0x8e <TinyI2CMaster::stop() [clone .constprop.19]+0xa>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:312
}
  96:	08 95       	ret

00000098 <TinyI2CMaster::write(unsigned char) [clone .constprop.17]>:
_ZN13TinyI2CMaster5writeEh.constprop.17():
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:280
  I2Ccount = 0;
  return TinyI2CMaster::read();
}

bool TinyI2CMaster::write (uint8_t data) {
  TWI0.MCTRLB = TWI_MCMD_RECVTRANS_gc;                            // Prime transaction
  98:	92 e0       	ldi	r25, 0x02	; 2
  9a:	90 93 14 08 	sts	0x0814, r25	; 0x800814 <numbers+0x7f7885>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:281
  TWI0.MDATA = data;                                              // Send data
  9e:	80 93 18 08 	sts	0x0818, r24	; 0x800818 <numbers+0x7f7889>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:282
  while (!(TWI0.MSTATUS & TWI_WIF_bm));                           // Wait for write to complete
  a2:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <numbers+0x7f7886>
  a6:	86 ff       	sbrs	r24, 6
  a8:	fc cf       	rjmp	.-8      	; 0xa2 <TinyI2CMaster::write(unsigned char) [clone .constprop.17]+0xa>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:283
  if (TWI0.MSTATUS & (TWI_ARBLOST_bm|TWI_BUSERR_bm))return false; // Fails if bus error or arblost
  aa:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <numbers+0x7f7886>
  ae:	8c 70       	andi	r24, 0x0C	; 12
  b0:	39 f4       	brne	.+14     	; 0xc0 <TinyI2CMaster::write(unsigned char) [clone .constprop.17]+0x28>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:284
  return !(TWI0.MSTATUS & TWI_RXACK_bm);                          // Returns true if slave gave an ACK
  b2:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <numbers+0x7f7886>
  b6:	82 95       	swap	r24
  b8:	81 70       	andi	r24, 0x01	; 1
  ba:	91 e0       	ldi	r25, 0x01	; 1
  bc:	89 27       	eor	r24, r25
  be:	08 95       	ret
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:283

bool TinyI2CMaster::write (uint8_t data) {
  TWI0.MCTRLB = TWI_MCMD_RECVTRANS_gc;                            // Prime transaction
  TWI0.MDATA = data;                                              // Send data
  while (!(TWI0.MSTATUS & TWI_WIF_bm));                           // Wait for write to complete
  if (TWI0.MSTATUS & (TWI_ARBLOST_bm|TWI_BUSERR_bm))return false; // Fails if bus error or arblost
  c0:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:285
  return !(TWI0.MSTATUS & TWI_RXACK_bm);                          // Returns true if slave gave an ACK
}
  c2:	08 95       	ret

000000c4 <TinyI2CMaster::start(unsigned char, long) [clone .constprop.15]>:
_ZN13TinyI2CMaster5startEhl.constprop.15():
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:292
// Start transmission by sending address
bool TinyI2CMaster::start (uint8_t address, int32_t readcount) {
  bool read;
  if (readcount == 0) read = 0;                                   // Write
  else { I2Ccount = readcount; read = 1; }                        // Read
  TWI0.MADDR = address<<1 | read;                                 // Send START condition
  c4:	88 e7       	ldi	r24, 0x78	; 120
  c6:	80 93 17 08 	sts	0x0817, r24	; 0x800817 <numbers+0x7f7888>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:293
  while (!(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm)));            // Wait for write or read interrupt flag
  ca:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <numbers+0x7f7886>
  ce:	80 7c       	andi	r24, 0xC0	; 192
  d0:	e1 f3       	breq	.-8      	; 0xca <TinyI2CMaster::start(unsigned char, long) [clone .constprop.15]+0x6>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:294
  if (TWI0.MSTATUS & TWI_ARBLOST_bm) {                            // Arbitration lost or bus error
  d2:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <numbers+0x7f7886>
  d6:	83 ff       	sbrs	r24, 3
  d8:	06 c0       	rjmp	.+12     	; 0xe6 <TinyI2CMaster::start(unsigned char, long) [clone .constprop.15]+0x22>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:295
    while (!(TWI0.MSTATUS & TWI_BUSSTATE_IDLE_gc));               // Wait for bus to return to idle state
  da:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <numbers+0x7f7886>
  de:	80 ff       	sbrs	r24, 0
  e0:	fc cf       	rjmp	.-8      	; 0xda <TinyI2CMaster::start(unsigned char, long) [clone .constprop.15]+0x16>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:296
    return false;
  e2:	80 e0       	ldi	r24, 0x00	; 0
  e4:	08 95       	ret
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:297
  } else if (TWI0.MSTATUS & TWI_RXACK_bm) {                       // Address not acknowledged by client
  e6:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <numbers+0x7f7886>
  ea:	84 ff       	sbrs	r24, 4
  ec:	0a c0       	rjmp	.+20     	; 0x102 <__DATA_REGION_LENGTH__+0x2>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:298
    TWI0.MCTRLB |= TWI_MCMD_STOP_gc;                              // Send stop condition
  ee:	80 91 14 08 	lds	r24, 0x0814	; 0x800814 <numbers+0x7f7885>
  f2:	83 60       	ori	r24, 0x03	; 3
  f4:	80 93 14 08 	sts	0x0814, r24	; 0x800814 <numbers+0x7f7885>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:299
    while (!(TWI0.MSTATUS & TWI_BUSSTATE_IDLE_gc));               // Wait for bus to return to idle state
  f8:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <numbers+0x7f7886>
  fc:	80 ff       	sbrs	r24, 0
  fe:	fc cf       	rjmp	.-8      	; 0xf8 <TinyI2CMaster::start(unsigned char, long) [clone .constprop.15]+0x34>
 100:	f0 cf       	rjmp	.-32     	; 0xe2 <TinyI2CMaster::start(unsigned char, long) [clone .constprop.15]+0x1e>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:302
    return false;
  }
  return true;                                                    // Return true if slave gave an ACK
 102:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:303
}
 104:	08 95       	ret

00000106 <SSD1306Device::ssd1306_send_data_start() [clone .constprop.14]>:
_ZN13SSD1306Device23ssd1306_send_data_startEv.constprop.14():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:100
  TinyI2C.write(command);
  ssd1306_send_command_stop();
}

void SSD1306Device::ssd1306_send_data_start(void) {
  TinyI2C.start(SSD1306, 0);
 106:	de df       	rcall	.-68     	; 0xc4 <TinyI2CMaster::start(unsigned char, long) [clone .constprop.15]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:101
  TinyI2C.write(0x40); // write data
 108:	80 e4       	ldi	r24, 0x40	; 64
 10a:	c6 cf       	rjmp	.-116    	; 0x98 <TinyI2CMaster::write(unsigned char) [clone .constprop.17]>

0000010c <SSD1306Device::ssd1306_send_command_start() [clone .constprop.13]>:
_ZN13SSD1306Device26ssd1306_send_command_startEv.constprop.13():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:81
    ssd1306_send_command(ssd1306_init_sequence[i]);
  }
}

void SSD1306Device::ssd1306_send_command_start(void) {
  TinyI2C.start(SSD1306, 0);
 10c:	db df       	rcall	.-74     	; 0xc4 <TinyI2CMaster::start(unsigned char, long) [clone .constprop.15]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:82
  TinyI2C.write(0x00); // write command
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	c3 cf       	rjmp	.-122    	; 0x98 <TinyI2CMaster::write(unsigned char) [clone .constprop.17]>

00000112 <SSD1306Device::setCursor(unsigned char, unsigned char) [clone .constprop.12]>:
_ZN13SSD1306Device9setCursorEhh.constprop.12():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:108

void SSD1306Device::ssd1306_send_data_stop(void) {
  TinyI2C.stop();
}

void SSD1306Device::setCursor(uint8_t x, uint8_t y) {
 112:	cf 93       	push	r28
 114:	df 93       	push	r29
 116:	c8 2f       	mov	r28, r24
 118:	d6 2f       	mov	r29, r22
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:109
  ssd1306_send_command_start();
 11a:	f8 df       	rcall	.-16     	; 0x10c <SSD1306Device::ssd1306_send_command_start() [clone .constprop.13]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:110
  TinyI2C.write(0xb0 + y);
 11c:	80 eb       	ldi	r24, 0xB0	; 176
 11e:	8d 0f       	add	r24, r29
 120:	bb df       	rcall	.-138    	; 0x98 <TinyI2CMaster::write(unsigned char) [clone .constprop.17]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:111
  TinyI2C.write(((x & 0xf0) >> 4) | 0x10); // | 0x10
 122:	8c 2f       	mov	r24, r28
 124:	82 95       	swap	r24
 126:	8f 70       	andi	r24, 0x0F	; 15
 128:	80 61       	ori	r24, 0x10	; 16
 12a:	b6 df       	rcall	.-148    	; 0x98 <TinyI2CMaster::write(unsigned char) [clone .constprop.17]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:112
  TinyI2C.write((x & 0x0f) | 0x01); // | 0x01
 12c:	8c 2f       	mov	r24, r28
 12e:	8e 70       	andi	r24, 0x0E	; 14
 130:	81 60       	ori	r24, 0x01	; 1
 132:	b2 df       	rcall	.-156    	; 0x98 <TinyI2CMaster::write(unsigned char) [clone .constprop.17]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:114
  ssd1306_send_command_stop();
}
 134:	df 91       	pop	r29
 136:	cf 91       	pop	r28
ssd1306_send_command_stop():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:86
  TinyI2C.start(SSD1306, 0);
  TinyI2C.write(0x00); // write command
}

void SSD1306Device::ssd1306_send_command_stop(void) {
  TinyI2C.stop();
 138:	a5 cf       	rjmp	.-182    	; 0x84 <TinyI2CMaster::stop() [clone .constprop.19]>

0000013a <SSD1306Device::drawLine(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.11]>:
_ZN13SSD1306Device8drawLineEhhhh.constprop.11():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:116
  TinyI2C.write(((x & 0xf0) >> 4) | 0x10); // | 0x10
  TinyI2C.write((x & 0x0f) | 0x01); // | 0x01
  ssd1306_send_command_stop();
}

void SSD1306Device::drawLine(uint8_t x0, uint8_t y0, uint8_t lineLenght, uint8_t dataValue) {
 13a:	1f 93       	push	r17
 13c:	cf 93       	push	r28
 13e:	df 93       	push	r29
 140:	14 2f       	mov	r17, r20
 142:	d2 2f       	mov	r29, r18
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:117
  setCursor(x0, y0);
 144:	e6 df       	rcall	.-52     	; 0x112 <SSD1306Device::setCursor(unsigned char, unsigned char) [clone .constprop.12]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:118
  ssd1306_send_data_start();
 146:	df df       	rcall	.-66     	; 0x106 <SSD1306Device::ssd1306_send_data_start() [clone .constprop.14]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:119
  for (uint8_t x = 0; x < lineLenght; x++) {
 148:	c0 e0       	ldi	r28, 0x00	; 0
 14a:	c1 17       	cp	r28, r17
 14c:	21 f0       	breq	.+8      	; 0x156 <SSD1306Device::drawLine(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.11]+0x1c>
ssd1306_send_data_byte():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:90
void SSD1306Device::ssd1306_send_command_stop(void) {
  TinyI2C.stop();
}

void SSD1306Device::ssd1306_send_data_byte(uint8_t byte) {
  TinyI2C.write(byte);
 14e:	8d 2f       	mov	r24, r29
 150:	a3 df       	rcall	.-186    	; 0x98 <TinyI2CMaster::write(unsigned char) [clone .constprop.17]>
_ZN13SSD1306Device8drawLineEhhhh.constprop.11():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:119
}

void SSD1306Device::drawLine(uint8_t x0, uint8_t y0, uint8_t lineLenght, uint8_t dataValue) {
  setCursor(x0, y0);
  ssd1306_send_data_start();
  for (uint8_t x = 0; x < lineLenght; x++) {
 152:	cf 5f       	subi	r28, 0xFF	; 255
 154:	fa cf       	rjmp	.-12     	; 0x14a <SSD1306Device::drawLine(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.11]+0x10>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:123
    ssd1306_send_data_byte(dataValue);
  }
  ssd1306_send_data_stop();
}
 156:	df 91       	pop	r29
 158:	cf 91       	pop	r28
 15a:	1f 91       	pop	r17
ssd1306_send_data_stop():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:105
  TinyI2C.start(SSD1306, 0);
  TinyI2C.write(0x40); // write data
}

void SSD1306Device::ssd1306_send_data_stop(void) {
  TinyI2C.stop();
 15c:	93 cf       	rjmp	.-218    	; 0x84 <TinyI2CMaster::stop() [clone .constprop.19]>

0000015e <SSD1306Device::clearScreen() [clone .constprop.9]>:
_ZN13SSD1306Device11clearScreenEv.constprop.9():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:135
void SSD1306Device::brightScreen(void) {
  oled.ssd1306_send_command(0x81);// brightness controll
  oled.ssd1306_send_command(0x3F);// dim screen
}

void SSD1306Device::clearScreen (void) {
 15e:	cf 93       	push	r28
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:136
  for ( uint8_t x = 0; x < 4; x++) {
 160:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:137
    oled.drawLine(0, x, 128, 0x00);
 162:	20 e0       	ldi	r18, 0x00	; 0
 164:	40 e8       	ldi	r20, 0x80	; 128
 166:	6c 2f       	mov	r22, r28
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	e7 df       	rcall	.-50     	; 0x13a <SSD1306Device::drawLine(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.11]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:136
  oled.ssd1306_send_command(0x81);// brightness controll
  oled.ssd1306_send_command(0x3F);// dim screen
}

void SSD1306Device::clearScreen (void) {
  for ( uint8_t x = 0; x < 4; x++) {
 16c:	cf 5f       	subi	r28, 0xFF	; 255
 16e:	c4 30       	cpi	r28, 0x04	; 4
 170:	c1 f7       	brne	.-16     	; 0x162 <SSD1306Device::clearScreen() [clone .constprop.9]+0x4>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:139
    oled.drawLine(0, x, 128, 0x00);
  }
}
 172:	cf 91       	pop	r28
 174:	08 95       	ret

00000176 <SSD1306Device::ssd1306_send_command(unsigned char) [clone .constprop.8]>:
_ZN13SSD1306Device20ssd1306_send_commandEh.constprop.8():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:93

void SSD1306Device::ssd1306_send_data_byte(uint8_t byte) {
  TinyI2C.write(byte);
}

void SSD1306Device::ssd1306_send_command(uint8_t command) {
 176:	cf 93       	push	r28
 178:	c8 2f       	mov	r28, r24
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:94
  ssd1306_send_command_start();
 17a:	c8 df       	rcall	.-112    	; 0x10c <SSD1306Device::ssd1306_send_command_start() [clone .constprop.13]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:95
  TinyI2C.write(command);
 17c:	8c 2f       	mov	r24, r28
 17e:	8c df       	rcall	.-232    	; 0x98 <TinyI2CMaster::write(unsigned char) [clone .constprop.17]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:97
  ssd1306_send_command_stop();
}
 180:	cf 91       	pop	r28
ssd1306_send_command_stop():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:86
  TinyI2C.start(SSD1306, 0);
  TinyI2C.write(0x00); // write command
}

void SSD1306Device::ssd1306_send_command_stop(void) {
  TinyI2C.stop();
 182:	80 cf       	rjmp	.-256    	; 0x84 <TinyI2CMaster::stop() [clone .constprop.19]>

00000184 <buttonDebounce()>:
_Z14buttonDebouncev():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:372
    i += SpritePixelsHeight;
  }
}

bool buttonDebounce(void) {
  if (BUTTONHIGH) return false;
 184:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <numbers+0x7f7479>
 188:	86 fd       	sbrc	r24, 6
 18a:	17 c0       	rjmp	.+46     	; 0x1ba <buttonDebounce()+0x36>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:373
  timer = interruptTimer;
 18c:	20 91 13 3f 	lds	r18, 0x3F13	; 0x803f13 <interruptTimer>
 190:	30 91 14 3f 	lds	r19, 0x3F14	; 0x803f14 <interruptTimer+0x1>
 194:	20 93 11 3f 	sts	0x3F11, r18	; 0x803f11 <timer>
 198:	30 93 12 3f 	sts	0x3F12, r19	; 0x803f12 <timer+0x1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:374
  while ((interruptTimer - timer) < 250 || BUTTONLOW); // super simple button debounce
 19c:	80 91 13 3f 	lds	r24, 0x3F13	; 0x803f13 <interruptTimer>
 1a0:	90 91 14 3f 	lds	r25, 0x3F14	; 0x803f14 <interruptTimer+0x1>
 1a4:	82 1b       	sub	r24, r18
 1a6:	93 0b       	sbc	r25, r19
 1a8:	8a 3f       	cpi	r24, 0xFA	; 250
 1aa:	91 05       	cpc	r25, r1
 1ac:	b8 f3       	brcs	.-18     	; 0x19c <buttonDebounce()+0x18>
 1ae:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <numbers+0x7f7479>
 1b2:	86 ff       	sbrs	r24, 6
 1b4:	f3 cf       	rjmp	.-26     	; 0x19c <buttonDebounce()+0x18>
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	08 95       	ret
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:372
    i += SpritePixelsHeight;
  }
}

bool buttonDebounce(void) {
  if (BUTTONHIGH) return false;
 1ba:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:376
  timer = interruptTimer;
  while ((interruptTimer - timer) < 250 || BUTTONLOW); // super simple button debounce
  return true;
}
 1bc:	08 95       	ret

000001be <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)>:
_Z10drawSpritehhPhhhb():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:349
    }
    drawSprite(firstPixel, page, numbers[valueUnits], 32, 2, SPRITENORMAL);
  }
}

void drawSprite(uint8_t column, uint8_t page, uint8_t sprite[], uint8_t SpritePixelsHeight, uint8_t SpritePagesWidth, bool inverseColor) {
 1be:	7f 92       	push	r7
 1c0:	8f 92       	push	r8
 1c2:	9f 92       	push	r9
 1c4:	af 92       	push	r10
 1c6:	bf 92       	push	r11
 1c8:	cf 92       	push	r12
 1ca:	df 92       	push	r13
 1cc:	ef 92       	push	r14
 1ce:	ff 92       	push	r15
 1d0:	0f 93       	push	r16
 1d2:	1f 93       	push	r17
 1d4:	cf 93       	push	r28
 1d6:	df 93       	push	r29
 1d8:	78 2e       	mov	r7, r24
 1da:	c6 2f       	mov	r28, r22
 1dc:	6a 01       	movw	r12, r20
 1de:	f2 2e       	mov	r15, r18
 1e0:	06 0f       	add	r16, r22
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:350
  uint8_t i = 0;
 1e2:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:355

  for (uint8_t y = 0; y < SpritePagesWidth; y++) {
    oled.setCursor(column, (page + y));
    oled.ssd1306_send_data_start();
    for (uint8_t x = (0 + i); x < (SpritePixelsHeight + i); x++) {
 1e4:	a2 2e       	mov	r10, r18
 1e6:	b1 2c       	mov	r11, r1
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:353

void drawSprite(uint8_t column, uint8_t page, uint8_t sprite[], uint8_t SpritePixelsHeight, uint8_t SpritePagesWidth, bool inverseColor) {
  uint8_t i = 0;

  for (uint8_t y = 0; y < SpritePagesWidth; y++) {
    oled.setCursor(column, (page + y));
 1e8:	6c 2f       	mov	r22, r28
 1ea:	87 2d       	mov	r24, r7
 1ec:	92 df       	rcall	.-220    	; 0x112 <SSD1306Device::setCursor(unsigned char, unsigned char) [clone .constprop.12]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:354
    oled.ssd1306_send_data_start();
 1ee:	8b df       	rcall	.-234    	; 0x106 <SSD1306Device::ssd1306_send_data_start() [clone .constprop.14]>
 1f0:	d1 2f       	mov	r29, r17
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:355
    for (uint8_t x = (0 + i); x < (SpritePixelsHeight + i); x++) {
 1f2:	45 01       	movw	r8, r10
 1f4:	81 0e       	add	r8, r17
 1f6:	91 1c       	adc	r9, r1
 1f8:	8d 2f       	mov	r24, r29
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	88 15       	cp	r24, r8
 1fe:	99 05       	cpc	r25, r9
 200:	7c f4       	brge	.+30     	; 0x220 <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)+0x62>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:357

      if (alwaysOn && x % 2 == 0) {
 202:	20 91 0c 3f 	lds	r18, 0x3F0C	; 0x803f0c <alwaysOn>
 206:	22 23       	and	r18, r18
 208:	11 f0       	breq	.+4      	; 0x20e <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)+0x50>
 20a:	d0 ff       	sbrs	r29, 0
 20c:	07 c0       	rjmp	.+14     	; 0x21c <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)+0x5e>
 20e:	8c 0d       	add	r24, r12
 210:	9d 1d       	adc	r25, r13
 212:	fc 01       	movw	r30, r24
 214:	80 81       	ld	r24, Z
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:361
        //oled.ssd1306_send_data_byte(sprite[0x00]);
      } else {

        if (inverseColor) oled.ssd1306_send_data_byte(~(sprite[x]));
 216:	e1 10       	cpse	r14, r1
ssd1306_send_data_byte():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:90
}

void SSD1306Device::ssd1306_send_data_byte(uint8_t byte) {
  TinyI2C.write(byte);
 218:	80 95       	com	r24
 21a:	3e df       	rcall	.-388    	; 0x98 <TinyI2CMaster::write(unsigned char) [clone .constprop.17]>
_Z10drawSpritehhPhhhb():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:355
  uint8_t i = 0;

  for (uint8_t y = 0; y < SpritePagesWidth; y++) {
    oled.setCursor(column, (page + y));
    oled.ssd1306_send_data_start();
    for (uint8_t x = (0 + i); x < (SpritePixelsHeight + i); x++) {
 21c:	df 5f       	subi	r29, 0xFF	; 255
 21e:	ec cf       	rjmp	.-40     	; 0x1f8 <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)+0x3a>
ssd1306_send_data_stop():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:105
  TinyI2C.start(SSD1306, 0);
  TinyI2C.write(0x40); // write data
}

void SSD1306Device::ssd1306_send_data_stop(void) {
  TinyI2C.stop();
 220:	31 df       	rcall	.-414    	; 0x84 <TinyI2CMaster::stop() [clone .constprop.19]>
_Z10drawSpritehhPhhhb():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:367

        if (!inverseColor) oled.ssd1306_send_data_byte(sprite[x]);
      }
    }
    oled.ssd1306_send_data_stop();
    i += SpritePixelsHeight;
 222:	1f 0d       	add	r17, r15
 224:	cf 5f       	subi	r28, 0xFF	; 255
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:352
}

void drawSprite(uint8_t column, uint8_t page, uint8_t sprite[], uint8_t SpritePixelsHeight, uint8_t SpritePagesWidth, bool inverseColor) {
  uint8_t i = 0;

  for (uint8_t y = 0; y < SpritePagesWidth; y++) {
 226:	c0 13       	cpse	r28, r16
 228:	df cf       	rjmp	.-66     	; 0x1e8 <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)+0x2a>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:369
      }
    }
    oled.ssd1306_send_data_stop();
    i += SpritePixelsHeight;
  }
}
 22a:	df 91       	pop	r29
 22c:	cf 91       	pop	r28
 22e:	1f 91       	pop	r17
 230:	0f 91       	pop	r16
 232:	ff 90       	pop	r15
 234:	ef 90       	pop	r14
 236:	df 90       	pop	r13
 238:	cf 90       	pop	r12
 23a:	bf 90       	pop	r11
 23c:	af 90       	pop	r10
 23e:	9f 90       	pop	r9
 240:	8f 90       	pop	r8
 242:	7f 90       	pop	r7
 244:	08 95       	ret

00000246 <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]>:
_Z8drawTimehhha.constprop.10():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:322
    }
  }
  alwaysOn = false;
}

void drawTime (uint8_t firstPixel, uint8_t page, uint8_t digitHeight, int8_t value) {// this function takes the digit and value from digits.h and draws it without the 0 to the left in hours
 246:	ef 92       	push	r14
 248:	ff 92       	push	r15
 24a:	0f 93       	push	r16
 24c:	1f 93       	push	r17
 24e:	cf 93       	push	r28
 250:	df 93       	push	r29
 252:	d8 2f       	mov	r29, r24
 254:	36 2f       	mov	r19, r22
 256:	c4 2f       	mov	r28, r20
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:323
  if (value < 0) value = (~value) + 1; // xor value and add one to make it posite
 258:	c7 fd       	sbrc	r28, 7
 25a:	c1 95       	neg	r28
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:326
  int8_t valueUnits = value;                      // always draws 2 digits ej: 01.

  if (value < 10) {
 25c:	ca 30       	cpi	r28, 0x0A	; 10
 25e:	5c f5       	brge	.+86     	; 0x2b6 <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]+0x70>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:328

    if (firstPixel == 64 || firstPixel == 80) {
 260:	8f 7e       	andi	r24, 0xEF	; 239
 262:	80 34       	cpi	r24, 0x40	; 64
 264:	f1 f4       	brne	.+60     	; 0x2a2 <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]+0x5c>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:330
      for (uint8_t x = 1; x < 3; x++) {
        oled.drawLine (96, x, 32, 0B00000000);
 266:	20 e0       	ldi	r18, 0x00	; 0
 268:	40 e2       	ldi	r20, 0x20	; 32
 26a:	61 e0       	ldi	r22, 0x01	; 1
 26c:	80 e6       	ldi	r24, 0x60	; 96
 26e:	65 df       	rcall	.-310    	; 0x13a <SSD1306Device::drawLine(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.11]>
 270:	20 e0       	ldi	r18, 0x00	; 0
 272:	40 e2       	ldi	r20, 0x20	; 32
 274:	62 e0       	ldi	r22, 0x02	; 2
 276:	80 e6       	ldi	r24, 0x60	; 96
 278:	60 df       	rcall	.-320    	; 0x13a <SSD1306Device::drawLine(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.11]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:336
      }
    } else {
      drawSprite((firstPixel + digitHeight), page, numbers[0], 32, 2, SPRITENORMAL);
    }

    drawSprite(firstPixel, page, numbers[value], 32, 2, SPRITENORMAL);
 27a:	ec 2f       	mov	r30, r28
 27c:	ee 0f       	add	r30, r30
 27e:	ff 0b       	sbc	r31, r31
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:345
    drawSprite((firstPixel + digitHeight), page, numbers[value], 32, 2, SPRITENORMAL);
    value *= 10;
    for (int8_t x = 0; x < value ; x++) {
      valueUnits--;
    }
    drawSprite(firstPixel, page, numbers[valueUnits], 32, 2, SPRITENORMAL);
 280:	e1 57       	subi	r30, 0x71	; 113
 282:	f0 47       	sbci	r31, 0x70	; 112
 284:	40 81       	ld	r20, Z
 286:	51 81       	ldd	r21, Z+1	; 0x01
 288:	e1 2c       	mov	r14, r1
 28a:	02 e0       	ldi	r16, 0x02	; 2
 28c:	20 e2       	ldi	r18, 0x20	; 32
 28e:	61 e0       	ldi	r22, 0x01	; 1
 290:	8d 2f       	mov	r24, r29
 292:	95 df       	rcall	.-214    	; 0x1be <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:347
  }
}
 294:	df 91       	pop	r29
 296:	cf 91       	pop	r28
 298:	1f 91       	pop	r17
 29a:	0f 91       	pop	r16
 29c:	ff 90       	pop	r15
 29e:	ef 90       	pop	r14
 2a0:	08 95       	ret
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:333
    if (firstPixel == 64 || firstPixel == 80) {
      for (uint8_t x = 1; x < 3; x++) {
        oled.drawLine (96, x, 32, 0B00000000);
      }
    } else {
      drawSprite((firstPixel + digitHeight), page, numbers[0], 32, 2, SPRITENORMAL);
 2a2:	e1 2c       	mov	r14, r1
 2a4:	02 e0       	ldi	r16, 0x02	; 2
 2a6:	20 e2       	ldi	r18, 0x20	; 32
 2a8:	42 e0       	ldi	r20, 0x02	; 2
 2aa:	5f e8       	ldi	r21, 0x8F	; 143
 2ac:	61 e0       	ldi	r22, 0x01	; 1
 2ae:	8d 2f       	mov	r24, r29
 2b0:	83 0f       	add	r24, r19
 2b2:	85 df       	rcall	.-246    	; 0x1be <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)>
 2b4:	e2 cf       	rjmp	.-60     	; 0x27a <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]+0x34>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:339
    }

    drawSprite(firstPixel, page, numbers[value], 32, 2, SPRITENORMAL);

  } else {
    value /= 10; // some math to substract the 0 from the left in hours digits
 2b6:	8a e0       	ldi	r24, 0x0A	; 10
 2b8:	f8 2e       	mov	r15, r24
 2ba:	8c 2f       	mov	r24, r28
 2bc:	6f 2d       	mov	r22, r15
 2be:	3c d4       	rcall	.+2168   	; 0xb38 <__divmodqi4>
 2c0:	18 2f       	mov	r17, r24
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:340
    drawSprite((firstPixel + digitHeight), page, numbers[value], 32, 2, SPRITENORMAL);
 2c2:	e8 2f       	mov	r30, r24
 2c4:	ee 0f       	add	r30, r30
 2c6:	ff 0b       	sbc	r31, r31
 2c8:	e1 57       	subi	r30, 0x71	; 113
 2ca:	f0 47       	sbci	r31, 0x70	; 112
 2cc:	40 81       	ld	r20, Z
 2ce:	51 81       	ldd	r21, Z+1	; 0x01
 2d0:	e1 2c       	mov	r14, r1
 2d2:	02 e0       	ldi	r16, 0x02	; 2
 2d4:	20 e2       	ldi	r18, 0x20	; 32
 2d6:	61 e0       	ldi	r22, 0x01	; 1
 2d8:	8d 2f       	mov	r24, r29
 2da:	83 0f       	add	r24, r19
 2dc:	70 df       	rcall	.-288    	; 0x1be <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:341
    value *= 10;
 2de:	1f 9d       	mul	r17, r15
 2e0:	10 2d       	mov	r17, r0
 2e2:	11 24       	eor	r1, r1
 2e4:	ec 2f       	mov	r30, r28
 2e6:	e1 50       	subi	r30, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:342
    for (int8_t x = 0; x < value ; x++) {
 2e8:	8c 2f       	mov	r24, r28
 2ea:	8e 1b       	sub	r24, r30
 2ec:	81 17       	cp	r24, r17
 2ee:	dc f3       	brlt	.-10     	; 0x2e6 <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]+0xa0>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:345
      valueUnits--;
    }
    drawSprite(firstPixel, page, numbers[valueUnits], 32, 2, SPRITENORMAL);
 2f0:	ee 0f       	add	r30, r30
 2f2:	ff 0b       	sbc	r31, r31
 2f4:	c5 cf       	rjmp	.-118    	; 0x280 <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]+0x3a>

000002f6 <displayTime(unsigned char, unsigned char)>:
_Z11displayTimehh():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:112
      goToSleep();
    }
  }
}

void displayTime(uint8_t hourPos, uint8_t minutesPos) { // draws time in display
 2f6:	cf 93       	push	r28
 2f8:	c6 2f       	mov	r28, r22
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:113
  drawTime(hourPos, 1, 32, hours);
 2fa:	40 91 0a 3f 	lds	r20, 0x3F0A	; 0x803f0a <hours>
 2fe:	60 e2       	ldi	r22, 0x20	; 32
 300:	a2 df       	rcall	.-188    	; 0x246 <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:114
  drawTime(minutesPos, 1, 32, minutes);
 302:	40 91 0b 3f 	lds	r20, 0x3F0B	; 0x803f0b <minutes>
 306:	60 e2       	ldi	r22, 0x20	; 32
 308:	8c 2f       	mov	r24, r28
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:115
}
 30a:	cf 91       	pop	r28
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:114
  }
}

void displayTime(uint8_t hourPos, uint8_t minutesPos) { // draws time in display
  drawTime(hourPos, 1, 32, hours);
  drawTime(minutesPos, 1, 32, minutes);
 30c:	9c cf       	rjmp	.-200    	; 0x246 <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]>

0000030e <analogRead.constprop.7>:
analogRead.constprop.7():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_analog.c:698
      // don't waste flash on smallest parts.
      if ((pin & 0x7F) > 0x1F) { // highest valid mux value for any 0 or 1-series part.
        return ADC_ERROR_BAD_PIN_OR_CHANNEL;
      }
    #endif
    if (!ADC0.CTRLA & 0x01) return ADC_ERROR_DISABLED;
 30e:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <numbers+0x7f7671>
 312:	88 23       	and	r24, r24
 314:	79 f0       	breq	.+30     	; 0x334 <analogRead.constprop.7+0x26>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_analog.c:702
    pin &= 0x1F;
    /* Reference should be already set up */
    /* Select channel */
    ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
 316:	8d e1       	ldi	r24, 0x1D	; 29
 318:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <numbers+0x7f7677>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_analog.c:709
    #if defined(STRICT_ERROR_CHECKING)
      if (ADC0.COMMAND) return ADC_ERROR_BUSY;
    #endif

    /* Start conversion */
    ADC0.COMMAND = ADC_STCONV_bm;
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <numbers+0x7f7679>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_analog.c:712

    /* Wait for result ready */
    while (!(ADC0.INTFLAGS & ADC_RESRDY_bm));
 322:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <numbers+0x7f767c>
 326:	80 ff       	sbrs	r24, 0
 328:	fc cf       	rjmp	.-8      	; 0x322 <analogRead.constprop.7+0x14>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_analog.c:715

    /* Combine two bytes */
    return ADC0.RES;
 32a:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <numbers+0x7f7681>
 32e:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <numbers+0x7f7682>
 332:	08 95       	ret
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_analog.c:698
      // don't waste flash on smallest parts.
      if ((pin & 0x7F) > 0x1F) { // highest valid mux value for any 0 or 1-series part.
        return ADC_ERROR_BAD_PIN_OR_CHANNEL;
      }
    #endif
    if (!ADC0.CTRLA & 0x01) return ADC_ERROR_DISABLED;
 334:	89 ef       	ldi	r24, 0xF9	; 249
 336:	92 e8       	ldi	r25, 0x82	; 130
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_analog.c:716
    /* Wait for result ready */
    while (!(ADC0.INTFLAGS & ADC_RESRDY_bm));

    /* Combine two bytes */
    return ADC0.RES;
  }
 338:	08 95       	ret

0000033a <pinMode.constprop.4>:
pinMode.constprop.4():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_digital.c:32
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

inline __attribute__((always_inline)) void check_valid_digital_pin(pin_size_t pin) {
  if (__builtin_constant_p(pin)) {
 33a:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_digital.c:161
  return port << 1;
}
void pinMode(uint8_t pin, uint8_t mode) {
  check_valid_digital_pin(pin);         /* generate compile error if a constant that is not a valid pin is used as the pin */
  check_valid_pin_mode(mode);           /* generate compile error if a constant that is not a valid pin mode is used as the mode */
  uint8_t bit_mask = digitalPinToBitMask(pin);
 33c:	fc 01       	movw	r30, r24
 33e:	e7 57       	subi	r30, 0x77	; 119
 340:	f0 47       	sbci	r31, 0x70	; 112
 342:	20 81       	ld	r18, Z
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_digital.c:162
  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP)) {
 344:	2f 3f       	cpi	r18, 0xFF	; 255
 346:	99 f0       	breq	.+38     	; 0x36e <pinMode.constprop.4+0x34>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_digital.c:165
    return;                             /* ignore invalid pins passed at runtime */
  }
  volatile uint8_t * port_base = ((volatile uint8_t *) (uint16_t)(0x0400 | portToPortBaseOffset(digitalPinToPort(pin))));
 348:	fc 01       	movw	r30, r24
 34a:	ed 57       	subi	r30, 0x7D	; 125
 34c:	f0 47       	sbci	r31, 0x70	; 112
portToPortBaseOffset():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_digital.c:155
  SREG=oldSREG; // re-enable interrupts
}

static inline uint8_t portToPortBaseOffset(uint8_t port);
static inline uint8_t portToPortBaseOffset(uint8_t port) {
  _SWAP(port);
 34e:	e0 81       	ld	r30, Z
 350:	e2 95       	swap	r30
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_digital.c:156
  return port << 1;
 352:	ee 0f       	add	r30, r30
pinMode.constprop.4():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_digital.c:165
  check_valid_pin_mode(mode);           /* generate compile error if a constant that is not a valid pin mode is used as the mode */
  uint8_t bit_mask = digitalPinToBitMask(pin);
  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP)) {
    return;                             /* ignore invalid pins passed at runtime */
  }
  volatile uint8_t * port_base = ((volatile uint8_t *) (uint16_t)(0x0400 | portToPortBaseOffset(digitalPinToPort(pin))));
 354:	f0 e0       	ldi	r31, 0x00	; 0
 356:	f4 60       	ori	r31, 0x04	; 4
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_digital.c:170
  if (mode & 0x01) {
    // OUTPUT mode, so write DIRSET with the mask.
    *(port_base + 1) = bit_mask;
  } else {
    *(port_base + 2) = bit_mask;
 358:	22 83       	std	Z+2, r18	; 0x02
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_digital.c:195
  // by 2 bytes and one clock.
  // If it's in the X register though, things that would be a load with displacement are instead turned into a adiw/ld/sbiw sequence.
  // (since X doesn't do displacement) so in that case it would be 1 word longer and 3 clocks slower.
  // Hand-written assembly that explointed the fact that this never results in a carry (and hence only acts on one byte)
  // saves anotther 1 clock and
  port_base +=(uint8_t) digitalPinToBitPosition(pin) | (uint8_t) 0x10;
 35a:	83 58       	subi	r24, 0x83	; 131
 35c:	90 47       	sbci	r25, 0x70	; 112
 35e:	dc 01       	movw	r26, r24
 360:	8c 91       	ld	r24, X
 362:	80 61       	ori	r24, 0x10	; 16
 364:	e8 0f       	add	r30, r24
 366:	f1 1d       	adc	r31, r1
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_digital.c:196
  bit_mask = *port_base;
 368:	80 81       	ld	r24, Z
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_digital.c:198
  if (mode & 2) {
    bit_mask |= 0x08;
 36a:	88 60       	ori	r24, 0x08	; 8
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_digital.c:202
  } else {
    bit_mask &= 0xF7;
  }
  *port_base = bit_mask;
 36c:	80 83       	st	Z, r24
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_digital.c:203
}
 36e:	08 95       	ret

00000370 <readSupplyVoltage()>:
_Z17readSupplyVoltagev():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_analog.c:665
  switch (mode) {
    #if defined(EXTERNAL)
      case EXTERNAL:
    #endif
    case VDD:
      VREF.CTRLB &= ~VREF_ADC0REFEN_bm; // Turn off force-adc-reference-enable
 370:	e0 ea       	ldi	r30, 0xA0	; 160
 372:	f0 e0       	ldi	r31, 0x00	; 0
 374:	81 81       	ldd	r24, Z+1	; 0x01
 376:	8d 7f       	andi	r24, 0xFD	; 253
 378:	81 83       	std	Z+1, r24	; 0x01
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring_analog.c:666
      ADC0.CTRLC = (ADC0.CTRLC & ~(ADC_REFSEL_gm)) | mode | ADC_SAMPCAP_bm; // per datasheet, recommended SAMPCAP=1 at ref > 1v - we don't *KNOW* the external reference will be >1v, but it's probably more likely...
 37a:	a0 e0       	ldi	r26, 0x00	; 0
 37c:	b6 e0       	ldi	r27, 0x06	; 6
 37e:	12 96       	adiw	r26, 0x02	; 2
 380:	8c 91       	ld	r24, X
 382:	12 97       	sbiw	r26, 0x02	; 2
 384:	8f 7c       	andi	r24, 0xCF	; 207
 386:	80 65       	ori	r24, 0x50	; 80
 388:	12 96       	adiw	r26, 0x02	; 2
 38a:	8c 93       	st	X, r24
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:389
  sleep_cpu();// go to sleep
}

uint16_t readSupplyVoltage() { //returns value in millivolts  taken from megaTinyCore example
  analogReference(VDD);
  VREF.CTRLA = VREF_ADC0REFSEL_1V5_gc;
 38c:	80 e4       	ldi	r24, 0x40	; 64
 38e:	80 83       	st	Z, r24
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:395
  // there is a settling time between when reference is turned on, and when it becomes valid.
  // since the reference is normally turned on only when it is requested, this virtually guarantees
  // that the first reading will be garbage; subsequent readings taken immediately after will be fine.
  // VREF.CTRLB|=VREF_ADC0REFEN_bm;
  // delay(10);
  uint16_t reading = analogRead(ADC_INTREF);
 390:	be df       	rcall	.-132    	; 0x30e <analogRead.constprop.7>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:396
  reading = analogRead(ADC_INTREF);
 392:	bd df       	rcall	.-134    	; 0x30e <analogRead.constprop.7>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:398
  uint32_t intermediate = 1023UL * 1500;
  reading = intermediate / reading;
 394:	9c 01       	movw	r18, r24
 396:	50 e0       	ldi	r21, 0x00	; 0
 398:	40 e0       	ldi	r20, 0x00	; 0
 39a:	64 e2       	ldi	r22, 0x24	; 36
 39c:	7a e6       	ldi	r23, 0x6A	; 106
 39e:	87 e1       	ldi	r24, 0x17	; 23
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	eb d3       	rcall	.+2006   	; 0xb7a <__udivmodsi4>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:400
  return reading;
}
 3a4:	c9 01       	movw	r24, r18
 3a6:	08 95       	ret

000003a8 <displayBatt()>:
_Z11displayBattv():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:117
void displayTime(uint8_t hourPos, uint8_t minutesPos) { // draws time in display
  drawTime(hourPos, 1, 32, hours);
  drawTime(minutesPos, 1, 32, minutes);
}

void displayBatt (void) {
 3a8:	ef 92       	push	r14
 3aa:	0f 93       	push	r16
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:118
  uint16_t actualVoltage = constrain(readSupplyVoltage (), MINVOLTAGE, MAXVOLTAGE);// read batt voltage and discards values outside range
 3ac:	e1 df       	rcall	.-62     	; 0x370 <readSupplyVoltage()>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:119
  actualVoltage = map(actualVoltage, MINVOLTAGE, MAXVOLTAGE, 0, 117);
 3ae:	85 30       	cpi	r24, 0x05	; 5
 3b0:	20 e1       	ldi	r18, 0x10	; 16
 3b2:	92 07       	cpc	r25, r18
 3b4:	10 f0       	brcs	.+4      	; 0x3ba <displayBatt()+0x12>
 3b6:	84 e0       	ldi	r24, 0x04	; 4
 3b8:	90 e1       	ldi	r25, 0x10	; 16
 3ba:	84 3e       	cpi	r24, 0xE4	; 228
 3bc:	2c e0       	ldi	r18, 0x0C	; 12
 3be:	92 07       	cpc	r25, r18
 3c0:	10 f4       	brcc	.+4      	; 0x3c6 <displayBatt()+0x1e>
 3c2:	84 ee       	ldi	r24, 0xE4	; 228
 3c4:	9c e0       	ldi	r25, 0x0C	; 12
 3c6:	b0 e0       	ldi	r27, 0x00	; 0
 3c8:	a0 e0       	ldi	r26, 0x00	; 0
map():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore\api/Common.cpp:5
#include "Common.h"

/* C++ prototypes */
long map(long x, long in_min, long in_max, long out_min, long out_max) {
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 3ca:	9c 01       	movw	r18, r24
 3cc:	ad 01       	movw	r20, r26
 3ce:	24 5e       	subi	r18, 0xE4	; 228
 3d0:	3c 40       	sbci	r19, 0x0C	; 12
 3d2:	41 09       	sbc	r20, r1
 3d4:	51 09       	sbc	r21, r1
 3d6:	a5 e7       	ldi	r26, 0x75	; 117
 3d8:	b0 e0       	ldi	r27, 0x00	; 0
 3da:	19 d4       	rcall	.+2098   	; 0xc0e <__muluhisi3>
 3dc:	20 e2       	ldi	r18, 0x20	; 32
 3de:	33 e0       	ldi	r19, 0x03	; 3
 3e0:	40 e0       	ldi	r20, 0x00	; 0
 3e2:	50 e0       	ldi	r21, 0x00	; 0
 3e4:	ec d3       	rcall	.+2008   	; 0xbbe <__divmodsi4>
 3e6:	42 2f       	mov	r20, r18
_Z11displayBattv():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:121
  for (uint8_t x = 224; x > 159; x -= 64) { // draw a line in bytes 10100000 or dec. 160 for low batt and 11100000 dec. 224 for normal batt level
    oled.drawLine (10, 3, actualVoltage, x); // indicates batt and low batt on screen
 3e8:	20 ee       	ldi	r18, 0xE0	; 224
 3ea:	63 e0       	ldi	r22, 0x03	; 3
 3ec:	8a e0       	ldi	r24, 0x0A	; 10
 3ee:	a5 de       	rcall	.-694    	; 0x13a <SSD1306Device::drawLine(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.11]>
 3f0:	20 ea       	ldi	r18, 0xA0	; 160
 3f2:	4e e1       	ldi	r20, 0x1E	; 30
 3f4:	63 e0       	ldi	r22, 0x03	; 3
 3f6:	8a e0       	ldi	r24, 0x0A	; 10
 3f8:	a0 de       	rcall	.-704    	; 0x13a <SSD1306Device::drawLine(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.11]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:125
    actualVoltage = 30;
  }

  if (!BATTCHR) drawSprite(0, 3, battSprite, 8, 1, SPRITENORMAL);// draws battery or charging icon if connected to usb.
 3fa:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <numbers+0x7f7479>
 3fe:	87 ff       	sbrs	r24, 7
 400:	08 c0       	rjmp	.+16     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 402:	e1 2c       	mov	r14, r1
 404:	01 e0       	ldi	r16, 0x01	; 1
 406:	28 e0       	ldi	r18, 0x08	; 8
 408:	42 e4       	ldi	r20, 0x42	; 66
 40a:	5f e8       	ldi	r21, 0x8F	; 143
 40c:	63 e0       	ldi	r22, 0x03	; 3
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	d6 de       	rcall	.-596    	; 0x1be <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:127

  if (BATTCHR) drawSprite(0, 3, chargingSprite, 8, 1, SPRITENORMAL);
 412:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <numbers+0x7f7479>
 416:	87 fd       	sbrc	r24, 7
 418:	08 c0       	rjmp	.+16     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41a:	e1 2c       	mov	r14, r1
 41c:	01 e0       	ldi	r16, 0x01	; 1
 41e:	28 e0       	ldi	r18, 0x08	; 8
 420:	45 e7       	ldi	r20, 0x75	; 117
 422:	5f e8       	ldi	r21, 0x8F	; 143
 424:	63 e0       	ldi	r22, 0x03	; 3
 426:	80 e0       	ldi	r24, 0x00	; 0
 428:	ca de       	rcall	.-620    	; 0x1be <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:128
}
 42a:	0f 91       	pop	r16
 42c:	ef 90       	pop	r14
 42e:	08 95       	ret

00000430 <wakeUpFromSleep(bool) [clone .part.1]>:
_Z15wakeUpFromSleepb.part.1():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:159

    if (totalSeconds--, totalSeconds < 1)  ledON();
  }
}

void wakeUpFromSleep(bool activateScreen) {
 430:	cf 93       	push	r28
 432:	df 93       	push	r29
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:162

  if (!activateScreen) return;
  SCREEN_RST //reset screen
 434:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <numbers+0x7f7475>
 438:	87 7f       	andi	r24, 0xF7	; 247
 43a:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <numbers+0x7f7475>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:163
  while (!SCREEN_OFF); // wait until screen is reseted
 43e:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <numbers+0x7f7475>
 442:	83 fd       	sbrc	r24, 3
 444:	fc cf       	rjmp	.-8      	; 0x43e <wakeUpFromSleep(bool) [clone .part.1]+0xe>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:164
  SCREEN_ON
 446:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <numbers+0x7f7475>
 44a:	88 60       	ori	r24, 0x08	; 8
 44c:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <numbers+0x7f7475>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:165
  while (SCREEN_OFF); // wait until screen is on
 450:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <numbers+0x7f7475>
 454:	83 ff       	sbrs	r24, 3
 456:	fc cf       	rjmp	.-8      	; 0x450 <wakeUpFromSleep(bool) [clone .part.1]+0x20>
init():
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:255
//uint32_t const FREQUENCY = 1000000L;                            // Hardware I2C clock in Hz
//uint32_t const T_RISE = 120L;                                   // Rise time

void TinyI2CMaster::init () {
#if !defined(DXCORE)
  pinMode(PIN_WIRE_SDA, INPUT_PULLUP);                            // Pullups on unless AVR DA/DB
 458:	82 e0       	ldi	r24, 0x02	; 2
 45a:	6f df       	rcall	.-290    	; 0x33a <pinMode.constprop.4>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:256
  pinMode(PIN_WIRE_SCL, INPUT_PULLUP);
 45c:	83 e0       	ldi	r24, 0x03	; 3
 45e:	6d df       	rcall	.-294    	; 0x33a <pinMode.constprop.4>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:259
#endif
  uint32_t baud = ((F_CPU/FREQUENCY) - (((F_CPU*T_RISE)/1000)/1000)/1000 - 10)/2;
  TWI0.MBAUD = (uint8_t)baud;
 460:	84 e0       	ldi	r24, 0x04	; 4
 462:	80 93 16 08 	sts	0x0816, r24	; 0x800816 <numbers+0x7f7887>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:260
  TWI0.MCTRLA = TWI_ENABLE_bm;                                    // Enable as master, no interrupts
 466:	81 e0       	ldi	r24, 0x01	; 1
 468:	80 93 13 08 	sts	0x0813, r24	; 0x800813 <numbers+0x7f7884>
C:\Users\gross\OneDrive\Arduino\libraries\tiny-i2c-master/TinyI2CMaster.cpp:261
  TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc;
 46c:	80 93 15 08 	sts	0x0815, r24	; 0x800815 <numbers+0x7f7886>
 470:	ca e4       	ldi	r28, 0x4A	; 74
 472:	df e8       	ldi	r29, 0x8F	; 143
begin():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:76
SSD1306Device::SSD1306Device(void) {}

void SSD1306Device::begin(void) {
  TinyI2C.init();
  for (uint8_t i = 0; i < sizeof (ssd1306_init_sequence); i++) {
    ssd1306_send_command(ssd1306_init_sequence[i]);
 474:	89 91       	ld	r24, Y+
 476:	7f de       	rcall	.-770    	; 0x176 <SSD1306Device::ssd1306_send_command(unsigned char) [clone .constprop.8]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:75

SSD1306Device::SSD1306Device(void) {}

void SSD1306Device::begin(void) {
  TinyI2C.init();
  for (uint8_t i = 0; i < sizeof (ssd1306_init_sequence); i++) {
 478:	8f e8       	ldi	r24, 0x8F	; 143
 47a:	c5 36       	cpi	r28, 0x65	; 101
 47c:	d8 07       	cpc	r29, r24
 47e:	d1 f7       	brne	.-12     	; 0x474 <wakeUpFromSleep(bool) [clone .part.1]+0x44>
_Z15wakeUpFromSleepb.part.1():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:167
  oled.begin();// start oled screen
  oled.clearScreen();
 480:	6e de       	rcall	.-804    	; 0x15e <SSD1306Device::clearScreen() [clone .constprop.9]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:168
  _PROTECTED_WRITE(WDT.CTRLA, 0); //Disable WDT
 482:	88 ed       	ldi	r24, 0xD8	; 216
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	84 bf       	out	0x34, r24	; 52
 488:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <numbers+0x7f7171>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:169
  displayTime(64, 0);
 48c:	60 e0       	ldi	r22, 0x00	; 0
 48e:	80 e4       	ldi	r24, 0x40	; 64
 490:	32 df       	rcall	.-412    	; 0x2f6 <displayTime(unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:170
  displayBatt();
 492:	8a df       	rcall	.-236    	; 0x3a8 <displayBatt()>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:171
  screenDimmed = false;
 494:	10 92 15 3f 	sts	0x3F15, r1	; 0x803f15 <screenDimmed>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:172
  sleepDelayTimer = 4000;
 498:	80 ea       	ldi	r24, 0xA0	; 160
 49a:	9f e0       	ldi	r25, 0x0F	; 15
 49c:	80 93 01 3f 	sts	0x3F01, r24	; 0x803f01 <sleepDelayTimer>
 4a0:	90 93 02 3f 	sts	0x3F02, r25	; 0x803f02 <sleepDelayTimer+0x1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:173
  powerSaveMode = 0;
 4a4:	10 92 0e 3f 	sts	0x3F0E, r1	; 0x803f0e <powerSaveMode>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:174
  buttonDebounce();
 4a8:	6d de       	rcall	.-806    	; 0x184 <buttonDebounce()>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:175
  resumeOperation = false;
 4aa:	10 92 03 3f 	sts	0x3F03, r1	; 0x803f03 <resumeOperation>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:176
}
 4ae:	df 91       	pop	r29
 4b0:	cf 91       	pop	r28
 4b2:	08 95       	ret

000004b4 <ledON()>:
_Z5ledONv():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:131

  if (BATTCHR) drawSprite(0, 3, chargingSprite, 8, 1, SPRITENORMAL);
}

void ledON (void) { // leds on or off
  ledPWM = true;
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	80 93 04 3f 	sts	0x3F04, r24	; 0x803f04 <__data_end>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:132
  while (BUTTONHIGH && !BATTCHR);
 4ba:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <numbers+0x7f7479>
 4be:	86 ff       	sbrs	r24, 6
 4c0:	04 c0       	rjmp	.+8      	; 0x4ca <ledON()+0x16>
 4c2:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <numbers+0x7f7479>
 4c6:	87 fd       	sbrc	r24, 7
 4c8:	f8 cf       	rjmp	.-16     	; 0x4ba <ledON()+0x6>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:133
  ENABLE_WDT // enabel watchdog
 4ca:	88 ed       	ldi	r24, 0xD8	; 216
 4cc:	9a e0       	ldi	r25, 0x0A	; 10
 4ce:	84 bf       	out	0x34, r24	; 52
 4d0:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <numbers+0x7f7171>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:134
  ledPWM = false;
 4d4:	10 92 04 3f 	sts	0x3F04, r1	; 0x803f04 <__data_end>
wakeUpFromSleep():
 4d8:	ab cf       	rjmp	.-170    	; 0x430 <wakeUpFromSleep(bool) [clone .part.1]>

000004da <__vector_7>:
__vector_7():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:421
  TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
  if (ledPWM) PORTA.OUTTGL = PIN3_bm;
  interruptTimer++;
}

ISR(RTC_PIT_vect) {
 4da:	1f 92       	push	r1
 4dc:	0f 92       	push	r0
 4de:	0f b6       	in	r0, 0x3f	; 63
 4e0:	0f 92       	push	r0
 4e2:	11 24       	eor	r1, r1
 4e4:	8f 93       	push	r24
 4e6:	9f 93       	push	r25
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:423
  /* Clear flag by writing '1': */
  RTC.PITINTFLAGS = RTC_PI_bm;
 4e8:	91 e0       	ldi	r25, 0x01	; 1
 4ea:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <numbers+0x7f71c4>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:425

  if (seconds++, seconds > 59) {// acutal time keeping
 4ee:	80 91 09 3f 	lds	r24, 0x3F09	; 0x803f09 <seconds>
 4f2:	8f 5f       	subi	r24, 0xFF	; 255
 4f4:	8c 33       	cpi	r24, 0x3C	; 60
 4f6:	70 f4       	brcc	.+28     	; 0x514 <__vector_7+0x3a>
 4f8:	80 93 09 3f 	sts	0x3F09, r24	; 0x803f09 <seconds>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:439
        hours = 0;
      }
    }
  }

  if (!shouldWakeUp) sleep_cpu();// beacause of interrupt only if true wake up
 4fc:	80 91 00 3f 	lds	r24, 0x3F00	; 0x803f00 <__DATA_REGION_ORIGIN__>
 500:	81 11       	cpse	r24, r1
 502:	01 c0       	rjmp	.+2      	; 0x506 <__vector_7+0x2c>
 504:	88 95       	sleep
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:440
}
 506:	9f 91       	pop	r25
 508:	8f 91       	pop	r24
 50a:	0f 90       	pop	r0
 50c:	0f be       	out	0x3f, r0	; 63
 50e:	0f 90       	pop	r0
 510:	1f 90       	pop	r1
 512:	18 95       	reti
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:426
ISR(RTC_PIT_vect) {
  /* Clear flag by writing '1': */
  RTC.PITINTFLAGS = RTC_PI_bm;

  if (seconds++, seconds > 59) {// acutal time keeping
    seconds = 0;
 514:	10 92 09 3f 	sts	0x3F09, r1	; 0x803f09 <seconds>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:428

    if (alwaysOn) shouldWakeUp  = true;// wake to draw allways on display
 518:	80 91 0c 3f 	lds	r24, 0x3F0C	; 0x803f0c <alwaysOn>
 51c:	81 11       	cpse	r24, r1
 51e:	90 93 00 3f 	sts	0x3F00, r25	; 0x803f00 <__DATA_REGION_ORIGIN__>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:430

    if (minutes++, minutes > 59) {
 522:	80 91 0b 3f 	lds	r24, 0x3F0B	; 0x803f0b <minutes>
 526:	8f 5f       	subi	r24, 0xFF	; 255
 528:	8c 33       	cpi	r24, 0x3C	; 60
 52a:	18 f4       	brcc	.+6      	; 0x532 <__vector_7+0x58>
 52c:	80 93 0b 3f 	sts	0x3F0B, r24	; 0x803f0b <minutes>
 530:	e5 cf       	rjmp	.-54     	; 0x4fc <__vector_7+0x22>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:431
      minutes = 0;
 532:	10 92 0b 3f 	sts	0x3F0B, r1	; 0x803f0b <minutes>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:433

      if (hours++, hours > 23) {
 536:	80 91 0a 3f 	lds	r24, 0x3F0A	; 0x803f0a <hours>
 53a:	8f 5f       	subi	r24, 0xFF	; 255
 53c:	88 31       	cpi	r24, 0x18	; 24
 53e:	18 f4       	brcc	.+6      	; 0x546 <__vector_7+0x6c>
 540:	80 93 0a 3f 	sts	0x3F0A, r24	; 0x803f0a <hours>
 544:	db cf       	rjmp	.-74     	; 0x4fc <__vector_7+0x22>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:434
        hours = 0;
 546:	10 92 0a 3f 	sts	0x3F0A, r1	; 0x803f0a <hours>
 54a:	d8 cf       	rjmp	.-80     	; 0x4fc <__vector_7+0x22>

0000054c <__vector_8>:
__vector_8():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:414
  alwaysOn = false;
  sleep_disable();
  ENABLE_WDT //enable watchdog
}

ISR(TCA0_OVF_vect) {
 54c:	1f 92       	push	r1
 54e:	0f 92       	push	r0
 550:	0f b6       	in	r0, 0x3f	; 63
 552:	0f 92       	push	r0
 554:	11 24       	eor	r1, r1
 556:	8f 93       	push	r24
 558:	9f 93       	push	r25
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:416
  /* The interrupt flag has to be cleared manually */
  TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
 55a:	81 e0       	ldi	r24, 0x01	; 1
 55c:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <numbers+0x7f7a7c>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:417
  if (ledPWM) PORTA.OUTTGL = PIN3_bm;
 560:	80 91 04 3f 	lds	r24, 0x3F04	; 0x803f04 <__data_end>
 564:	88 23       	and	r24, r24
 566:	19 f0       	breq	.+6      	; 0x56e <__vector_8+0x22>
 568:	88 e0       	ldi	r24, 0x08	; 8
 56a:	80 93 07 04 	sts	0x0407, r24	; 0x800407 <numbers+0x7f7478>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:418
  interruptTimer++;
 56e:	80 91 13 3f 	lds	r24, 0x3F13	; 0x803f13 <interruptTimer>
 572:	90 91 14 3f 	lds	r25, 0x3F14	; 0x803f14 <interruptTimer+0x1>
 576:	01 96       	adiw	r24, 0x01	; 1
 578:	80 93 13 3f 	sts	0x3F13, r24	; 0x803f13 <interruptTimer>
 57c:	90 93 14 3f 	sts	0x3F14, r25	; 0x803f14 <interruptTimer+0x1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:419
}
 580:	9f 91       	pop	r25
 582:	8f 91       	pop	r24
 584:	0f 90       	pop	r0
 586:	0f be       	out	0x3f, r0	; 63
 588:	0f 90       	pop	r0
 58a:	1f 90       	pop	r1
 58c:	18 95       	reti

0000058e <__vector_3>:
__vector_3():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:403
  reading = intermediate / reading;
  return reading;
}


ISR(PORTA_PORT_vect) {
 58e:	1f 92       	push	r1
 590:	0f 92       	push	r0
 592:	0f b6       	in	r0, 0x3f	; 63
 594:	0f 92       	push	r0
 596:	11 24       	eor	r1, r1
 598:	8f 93       	push	r24
 59a:	9f 93       	push	r25
 59c:	ef 93       	push	r30
 59e:	ff 93       	push	r31
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:404
  PORTA.PIN6CTRL &= ~PORT_ISC_gm;   // disable both interrupts.
 5a0:	e0 e0       	ldi	r30, 0x00	; 0
 5a2:	f4 e0       	ldi	r31, 0x04	; 4
 5a4:	86 89       	ldd	r24, Z+22	; 0x16
 5a6:	88 7f       	andi	r24, 0xF8	; 248
 5a8:	86 8b       	std	Z+22, r24	; 0x16
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:405
  PORTA.PIN7CTRL &= ~PORT_ISC_gm;
 5aa:	87 89       	ldd	r24, Z+23	; 0x17
 5ac:	88 7f       	andi	r24, 0xF8	; 248
 5ae:	87 8b       	std	Z+23, r24	; 0x17
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:406
  VPORTA.INTFLAGS = (1 << 6) | (1 << 7); // clear interrupts flag
 5b0:	80 ec       	ldi	r24, 0xC0	; 192
 5b2:	83 b9       	out	0x03, r24	; 3
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:407
  shouldWakeUp = true;
 5b4:	81 e0       	ldi	r24, 0x01	; 1
 5b6:	80 93 00 3f 	sts	0x3F00, r24	; 0x803f00 <__DATA_REGION_ORIGIN__>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:408
  resumeOperation = true; // if screen always on is off reset screen after sleep
 5ba:	80 93 03 3f 	sts	0x3F03, r24	; 0x803f03 <resumeOperation>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:409
  alwaysOn = false;
 5be:	10 92 0c 3f 	sts	0x3F0C, r1	; 0x803f0c <alwaysOn>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:410
  sleep_disable();
 5c2:	e0 e5       	ldi	r30, 0x50	; 80
 5c4:	f0 e0       	ldi	r31, 0x00	; 0
 5c6:	80 81       	ld	r24, Z
 5c8:	8e 7f       	andi	r24, 0xFE	; 254
 5ca:	80 83       	st	Z, r24
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:411
  ENABLE_WDT //enable watchdog
 5cc:	88 ed       	ldi	r24, 0xD8	; 216
 5ce:	9a e0       	ldi	r25, 0x0A	; 10
 5d0:	84 bf       	out	0x34, r24	; 52
 5d2:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <numbers+0x7f7171>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:412
}
 5d6:	ff 91       	pop	r31
 5d8:	ef 91       	pop	r30
 5da:	9f 91       	pop	r25
 5dc:	8f 91       	pop	r24
 5de:	0f 90       	pop	r0
 5e0:	0f be       	out	0x3f, r0	; 63
 5e2:	0f 90       	pop	r0
 5e4:	1f 90       	pop	r1
 5e6:	18 95       	reti

000005e8 <main>:
main():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/main.cpp:49
 * called first in non-optiboot configurations (neither is needed on Optibooot configurations() *
 * an extra bit of initialization code in .init3 to fix the vectors and still happen if user    *
 * overrides main. In the past there was a USB-related function here, that is removed, as work  *
 * will be needed in any event at the core level if VUSB-based "stuff" arrives, but really I'm  *
 * just waiting for the DU-series now                                                           */
int main() {
 5e8:	cf 93       	push	r28
 5ea:	df 93       	push	r29
 5ec:	00 d0       	rcall	.+0      	; 0x5ee <main+0x6>
 5ee:	00 d0       	rcall	.+0      	; 0x5f0 <main+0x8>
 5f0:	cd b7       	in	r28, 0x3d	; 61
 5f2:	de b7       	in	r29, 0x3e	; 62
init_clock():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring.c:1533
      #elif (F_CPU == 10000000) // 20MHz prescaled by 2
        /* Clock DIV2 */
        _PROTECTED_WRITE(CLKCTRL_MCLKCTRLB, (CLKCTRL_PEN_bm | CLKCTRL_PDIV_2X_gc));
      #elif (F_CPU == 8000000) // 16MHz prescaled by 2
        /* Clock DIV2 */
        _PROTECTED_WRITE(CLKCTRL_MCLKCTRLB, (CLKCTRL_PEN_bm | CLKCTRL_PDIV_2X_gc));
 5f4:	81 e0       	ldi	r24, 0x01	; 1
 5f6:	98 ed       	ldi	r25, 0xD8	; 216
 5f8:	94 bf       	out	0x34, r25	; 52
 5fa:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <numbers+0x7f70d2>
init_ADC0():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring.c:1660
    #if   F_CPU   > 24000000     // 24 MHz / 16 = 1.5 MHz,  25 MHz / 32 =  780 kHz
      ADC0.CTRLC  = ADC_PRESC_DIV32_gc | ADC_REFSEL_VDDREF_gc | ADC_SAMPCAP_bm;
    #elif F_CPU  >= 12000000    // 16 MHz / 16 = 1.0 MHz,  20 MHz / 16 = 1.25 MHz
      ADC0.CTRLC  = ADC_PRESC_DIV16_gc | ADC_REFSEL_VDDREF_gc | ADC_SAMPCAP_bm;
    #elif F_CPU  >=  6000000    //  8 MHz /  8 = 1.0 MHz,  10 MHz /  8 = 1.25 MHz
      ADC0.CTRLC  =  ADC_PRESC_DIV8_gc | ADC_REFSEL_VDDREF_gc | ADC_SAMPCAP_bm;
 5fe:	92 e5       	ldi	r25, 0x52	; 82
 600:	90 93 02 06 	sts	0x0602, r25	; 0x800602 <numbers+0x7f7673>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring.c:1671
    #if   (F_CPU == 6000000 || F_CPU == 12000000 || F_CPU == 24000000 || F_CPU ==25000000)
      ADC0.SAMPCTRL = (7); // 9 ADC clocks, 12 us
    #elif (F_CPU == 5000000 || F_CPU == 10000000 || F_CPU == 20000000)
      ADC0.SAMPCTRL = (13);   // 15 ADC clock,s 12 us
    #else
      ADC0.SAMPCTRL = (10); // 12 ADC clocks, 12 us
 604:	9a e0       	ldi	r25, 0x0A	; 10
 606:	90 93 05 06 	sts	0x0605, r25	; 0x800605 <numbers+0x7f7676>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring.c:1673
    #endif
    ADC0.CTRLD    = ADC_INITDLY_DLY16_gc;
 60a:	90 e2       	ldi	r25, 0x20	; 32
 60c:	90 93 03 06 	sts	0x0603, r25	; 0x800603 <numbers+0x7f7674>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring.c:1674
    ADC0.CTRLA    = ADC_ENABLE_bm;
 610:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <numbers+0x7f7671>
init_TCA0():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring.c:1762
  /*  TYPE A TIMER   */

  /* PORTMUX setting for TCA - don't need to set because using default
     UNLESS it's an 8-pin part, in which case we do.*/
  #ifdef __AVR_ATtinyxy2__
    PORTMUX.CTRLC = 1; // move WO0 output to PA7 so PA3 can be used with WO3
 614:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <numbers+0x7f7273>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring.c:1766
  #endif

  /* Enable Split Mode */
  TCA0.SPLIT.CTRLD = TCA_SPLIT_SPLITM_bm;
 618:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <numbers+0x7f7a74>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring.c:1771

  // Only 1 WGM so no need to specifically set up.

  /* Period setting, 8-bit register in SPLIT mode */
  TCA0.SPLIT.LPER    = PWM_TIMER_PERIOD;
 61c:	9e ef       	ldi	r25, 0xFE	; 254
 61e:	90 93 26 0a 	sts	0x0A26, r25	; 0x800a26 <numbers+0x7f7a97>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring.c:1772
  TCA0.SPLIT.HPER    = PWM_TIMER_PERIOD;
 622:	90 93 27 0a 	sts	0x0A27, r25	; 0x800a27 <numbers+0x7f7a98>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/wiring.c:1785
    TCA0.SPLIT.HCMP1 = 0;
    TCA0.SPLIT.LCMP2 = 0;
    TCA0.SPLIT.HCMP2 = 0;
  */

  TCA0.SPLIT.CTRLA = (TIMERA_PRESCALER_bm | TCA_SPLIT_ENABLE_bm);
 626:	9b e0       	ldi	r25, 0x0B	; 11
 628:	90 93 00 0a 	sts	0x0A00, r25	; 0x800a00 <numbers+0x7f7a71>
main():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore/main.cpp:53
  onBeforeInit(); // Emnpty callback called before init but after the .init stuff. First normal code executed
  init(); // Interrupts are turned on just prior to init() returning.
  initVariant();
  if (!onAfterInit()) sei();  // enable interrupts.
 62c:	78 94       	sei
setup():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:59
volatile boolean ledPWM = false;
volatile boolean alwaysOn = false;
volatile uint16_t interruptTimer = 0;

void setup() {
  PORTA.DIR = 0b00001110; // setup ports in and out
 62e:	2e e0       	ldi	r18, 0x0E	; 14
 630:	20 93 00 04 	sts	0x0400, r18	; 0x800400 <numbers+0x7f7471>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:60
  PORTA.PIN6CTRL = PORT_PULLUPEN_bm;// button pullup
 634:	28 e0       	ldi	r18, 0x08	; 8
 636:	20 93 16 04 	sts	0x0416, r18	; 0x800416 <numbers+0x7f7487>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:61
  PORTA.PIN7CTRL = PORT_PULLUPEN_bm;// button pullup
 63a:	20 93 17 04 	sts	0x0417, r18	; 0x800417 <numbers+0x7f7488>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:63

  TCA0.SINGLE.INTCTRL = TCA_SINGLE_OVF_bm; // configure TCA as millis counter
 63e:	80 93 0a 0a 	sts	0x0A0A, r24	; 0x800a0a <numbers+0x7f7a7b>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:64
  TCA0.SINGLE.CTRLB = TCA_SINGLE_WGMODE_NORMAL_gc; // set Normal mode
 642:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <numbers+0x7f7a72>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:65
  TCA0.SINGLE.EVCTRL &= ~(TCA_SINGLE_CNTEI_bm);// disable event counting
 646:	80 91 09 0a 	lds	r24, 0x0A09	; 0x800a09 <numbers+0x7f7a7a>
 64a:	8e 7f       	andi	r24, 0xFE	; 254
 64c:	80 93 09 0a 	sts	0x0A09, r24	; 0x800a09 <numbers+0x7f7a7a>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:66
  TCA0.SINGLE.PER = 90; // aprox 1ms, set the period(8000000/PER*DESIRED_HZ - 1)
 650:	2a e5       	ldi	r18, 0x5A	; 90
 652:	30 e0       	ldi	r19, 0x00	; 0
 654:	20 93 26 0a 	sts	0x0A26, r18	; 0x800a26 <numbers+0x7f7a97>
 658:	30 93 27 0a 	sts	0x0A27, r19	; 0x800a27 <numbers+0x7f7a98>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:67
  TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV64_gc // set clock  source (sys_clk/64)
 65c:	90 93 00 0a 	sts	0x0A00, r25	; 0x800a00 <numbers+0x7f7a71>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:70
                      | TCA_SINGLE_ENABLE_bm;

  while (RTC.STATUS > 0); //Wait for all register to be synchronized
 660:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <numbers+0x7f71b2>
 664:	81 11       	cpse	r24, r1
 666:	fc cf       	rjmp	.-8      	; 0x660 <main+0x78>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:71
  RTC.CTRLA = RTC_PRESCALER_DIV16_gc | RTC_RTCEN_bm | RTC_RUNSTDBY_bm; //PRESCALER = (32768/PERIOD)-1
 668:	81 ea       	ldi	r24, 0xA1	; 161
 66a:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <numbers+0x7f71b1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:72
  RTC.CLKSEL = RTC_CLKSEL_INT32K_gc; /* 32KHz Internal Ultra Low Power Oscillator (OSCULP32K) */
 66e:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <numbers+0x7f71b8>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:73
  RTC.PITINTCTRL = RTC_PI_bm; /* Periodic Interrupt: enabled */
 672:	81 e0       	ldi	r24, 0x01	; 1
 674:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <numbers+0x7f71c3>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:74
  RTC.PITCTRLA = RTC_PERIOD_CYC32768_gc /* RTC Clock Cycles 32768 */
 678:	81 e7       	ldi	r24, 0x71	; 113
 67a:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <numbers+0x7f71c1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:77
                 | RTC_PITEN_bm; /* Enable: enabled */

  sei(); // enable interrupts
 67e:	78 94       	sei
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:78
  set_sleep_mode(SLEEP_MODE_PWR_DOWN);// configure sleep mode
 680:	80 91 50 00 	lds	r24, 0x0050	; 0x800050 <numbers+0x7f70c1>
 684:	89 7f       	andi	r24, 0xF9	; 249
 686:	84 60       	ori	r24, 0x04	; 4
 688:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <numbers+0x7f70c1>
options():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:201
  }
}

void options (void) { // options menu
  int8_t option = 0;
  const uint8_t spriteOptionPos [] = {100, 70, 40, 10};
 68c:	20 90 3e 8c 	lds	r2, 0x8C3E	; 0x808c3e <__bss_end+0x4d28>
 690:	30 90 3f 8c 	lds	r3, 0x8C3F	; 0x808c3f <__bss_end+0x4d29>
 694:	40 90 40 8c 	lds	r4, 0x8C40	; 0x808c40 <__bss_end+0x4d2a>
 698:	50 90 41 8c 	lds	r5, 0x8C41	; 0x808c41 <__bss_end+0x4d2b>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:206
  bool setOptions = true;
  oled.clearScreen();

  for (uint8_t x = 0; x < 4; x++) {
    drawSprite(spriteOptionPos [x], 1, optionSprites[x], 16, 2, !x);
 69c:	aa 24       	eor	r10, r10
 69e:	a3 94       	inc	r10
 6a0:	ff 24       	eor	r15, r15
 6a2:	f3 94       	inc	r15
countdownTimer():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:141
}


void countdownTimer(void) {

  if (totalSeconds == 0) return; // timer logic
 6a4:	20 91 0f 3f 	lds	r18, 0x3F0F	; 0x803f0f <totalSeconds>
 6a8:	30 91 10 3f 	lds	r19, 0x3F10	; 0x803f10 <totalSeconds+0x1>
 6ac:	21 15       	cp	r18, r1
 6ae:	31 05       	cpc	r19, r1
 6b0:	d9 f1       	breq	.+118    	; 0x728 <main+0x140>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:143

  if (seconds != lastSecond) {
 6b2:	80 91 09 3f 	lds	r24, 0x3F09	; 0x803f09 <seconds>
 6b6:	90 91 06 3f 	lds	r25, 0x3F06	; 0x803f06 <lastSecond>
 6ba:	89 17       	cp	r24, r25
 6bc:	a9 f1       	breq	.+106    	; 0x728 <main+0x140>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:144
    lastSecond = seconds;
 6be:	80 93 06 3f 	sts	0x3F06, r24	; 0x803f06 <lastSecond>
map():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore\api/Common.cpp:5
 6c2:	ae e7       	ldi	r26, 0x7E	; 126
 6c4:	b0 e0       	ldi	r27, 0x00	; 0
 6c6:	97 d2       	rcall	.+1326   	; 0xbf6 <__umulhisi3>
countdownTimer():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:145
    uint8_t timerBarValue = map(totalSeconds, 0 , totalSecondsTimer, 0, 126);
 6c8:	20 91 07 3f 	lds	r18, 0x3F07	; 0x803f07 <totalSecondsTimer>
 6cc:	30 91 08 3f 	lds	r19, 0x3F08	; 0x803f08 <totalSecondsTimer+0x1>
 6d0:	50 e0       	ldi	r21, 0x00	; 0
 6d2:	40 e0       	ldi	r20, 0x00	; 0
map():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.4\cores\megatinycore\api/Common.cpp:5
 6d4:	74 d2       	rcall	.+1256   	; 0xbbe <__divmodsi4>
 6d6:	12 2f       	mov	r17, r18
countdownTimer():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:146
    oled.drawLine (timerBarValue, 0, 2, 0B00000000);
 6d8:	20 e0       	ldi	r18, 0x00	; 0
 6da:	42 e0       	ldi	r20, 0x02	; 2
 6dc:	60 e0       	ldi	r22, 0x00	; 0
 6de:	81 2f       	mov	r24, r17
 6e0:	2c dd       	rcall	.-1448   	; 0x13a <SSD1306Device::drawLine(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.11]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:147
    oled.drawLine (0, 0, timerBarValue, 0B00000011);
 6e2:	23 e0       	ldi	r18, 0x03	; 3
 6e4:	41 2f       	mov	r20, r17
 6e6:	60 e0       	ldi	r22, 0x00	; 0
 6e8:	80 e0       	ldi	r24, 0x00	; 0
 6ea:	27 dd       	rcall	.-1458   	; 0x13a <SSD1306Device::drawLine(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.11]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:148
    displayBatt();
 6ec:	5d de       	rcall	.-838    	; 0x3a8 <displayBatt()>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:150

    if (lastMinute != minutes || totalSeconds == 0) {
 6ee:	80 91 0b 3f 	lds	r24, 0x3F0B	; 0x803f0b <minutes>
 6f2:	90 91 05 3f 	lds	r25, 0x3F05	; 0x803f05 <lastMinute>
 6f6:	98 13       	cpse	r25, r24
 6f8:	06 c0       	rjmp	.+12     	; 0x706 <main+0x11e>
 6fa:	20 91 0f 3f 	lds	r18, 0x3F0F	; 0x803f0f <totalSeconds>
 6fe:	30 91 10 3f 	lds	r19, 0x3F10	; 0x803f10 <totalSeconds+0x1>
 702:	23 2b       	or	r18, r19
 704:	29 f4       	brne	.+10     	; 0x710 <main+0x128>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:151
      lastMinute = minutes;
 706:	80 93 05 3f 	sts	0x3F05, r24	; 0x803f05 <lastMinute>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:152
      displayTime(64, 0);
 70a:	60 e0       	ldi	r22, 0x00	; 0
 70c:	80 e4       	ldi	r24, 0x40	; 64
 70e:	f3 dd       	rcall	.-1050   	; 0x2f6 <displayTime(unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:155
    }

    if (totalSeconds--, totalSeconds < 1)  ledON();
 710:	80 91 0f 3f 	lds	r24, 0x3F0F	; 0x803f0f <totalSeconds>
 714:	90 91 10 3f 	lds	r25, 0x3F10	; 0x803f10 <totalSeconds+0x1>
 718:	01 97       	sbiw	r24, 0x01	; 1
 71a:	80 93 0f 3f 	sts	0x3F0F, r24	; 0x803f0f <totalSeconds>
 71e:	90 93 10 3f 	sts	0x3F10, r25	; 0x803f10 <totalSeconds+0x1>
 722:	89 2b       	or	r24, r25
 724:	09 f4       	brne	.+2      	; 0x728 <main+0x140>
 726:	c6 de       	rcall	.-628    	; 0x4b4 <ledON()>
loop():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:84
}

void loop() {

  countdownTimer(); // countdowntimer logic
  wakeUpFromSleep(resumeOperation);// restart display after wake up
 728:	80 91 03 3f 	lds	r24, 0x3F03	; 0x803f03 <resumeOperation>
wakeUpFromSleep():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:161
  }
}

void wakeUpFromSleep(bool activateScreen) {

  if (!activateScreen) return;
 72c:	81 11       	cpse	r24, r1
 72e:	80 de       	rcall	.-768    	; 0x430 <wakeUpFromSleep(bool) [clone .part.1]>
loop():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:86
void loop() {

  countdownTimer(); // countdowntimer logic
  wakeUpFromSleep(resumeOperation);// restart display after wake up

  if (buttonDebounce()) { // dimm screen or enter options menu
 730:	29 dd       	rcall	.-1454   	; 0x184 <buttonDebounce()>
 732:	b8 2e       	mov	r11, r24
 734:	88 23       	and	r24, r24
 736:	59 f0       	breq	.+22     	; 0x74e <main+0x166>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:88

    if (screenDimmed) {
 738:	80 91 15 3f 	lds	r24, 0x3F15	; 0x803f15 <screenDimmed>
 73c:	88 23       	and	r24, r24
 73e:	09 f4       	brne	.+2      	; 0x742 <main+0x15a>
 740:	90 c0       	rjmp	.+288    	; 0x862 <main+0x27a>
brightScreen():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:131
  oled.ssd1306_send_command(0x81);// brightness controll
  oled.ssd1306_send_command(0x05);// dim screen
}

void SSD1306Device::brightScreen(void) {
  oled.ssd1306_send_command(0x81);// brightness controll
 742:	81 e8       	ldi	r24, 0x81	; 129
 744:	18 dd       	rcall	.-1488   	; 0x176 <SSD1306Device::ssd1306_send_command(unsigned char) [clone .constprop.8]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:132
  oled.ssd1306_send_command(0x3F);// dim screen
 746:	8f e3       	ldi	r24, 0x3F	; 63
 748:	16 dd       	rcall	.-1492   	; 0x176 <SSD1306Device::ssd1306_send_command(unsigned char) [clone .constprop.8]>
loop():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:90
      oled.brightScreen();
      screenDimmed = false;
 74a:	10 92 15 3f 	sts	0x3F15, r1	; 0x803f15 <screenDimmed>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:96
    } else {
      options();
    }
  }

  if ((interruptTimer - timer) > sleepDelayTimer) { // prepare to sleep or dimm screen
 74e:	80 91 13 3f 	lds	r24, 0x3F13	; 0x803f13 <interruptTimer>
 752:	90 91 14 3f 	lds	r25, 0x3F14	; 0x803f14 <interruptTimer+0x1>
 756:	20 91 11 3f 	lds	r18, 0x3F11	; 0x803f11 <timer>
 75a:	30 91 12 3f 	lds	r19, 0x3F12	; 0x803f12 <timer+0x1>
 75e:	82 1b       	sub	r24, r18
 760:	93 0b       	sbc	r25, r19
 762:	20 91 01 3f 	lds	r18, 0x3F01	; 0x803f01 <sleepDelayTimer>
 766:	30 91 02 3f 	lds	r19, 0x3F02	; 0x803f02 <sleepDelayTimer+0x1>
 76a:	28 17       	cp	r18, r24
 76c:	39 07       	cpc	r19, r25
 76e:	08 f0       	brcs	.+2      	; 0x772 <main+0x18a>
 770:	99 cf       	rjmp	.-206    	; 0x6a4 <main+0xbc>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:97
    timer = interruptTimer;
 772:	80 91 13 3f 	lds	r24, 0x3F13	; 0x803f13 <interruptTimer>
 776:	90 91 14 3f 	lds	r25, 0x3F14	; 0x803f14 <interruptTimer+0x1>
 77a:	80 93 11 3f 	sts	0x3F11, r24	; 0x803f11 <timer>
 77e:	90 93 12 3f 	sts	0x3F12, r25	; 0x803f12 <timer+0x1>
dimScreen():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:126
  }
  ssd1306_send_data_stop();
}

void SSD1306Device::dimScreen(void) {
  oled.ssd1306_send_command(0x81);// brightness controll
 782:	81 e8       	ldi	r24, 0x81	; 129
 784:	f8 dc       	rcall	.-1552   	; 0x176 <SSD1306Device::ssd1306_send_command(unsigned char) [clone .constprop.8]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/tinyOLED.cpp:127
  oled.ssd1306_send_command(0x05);// dim screen
 786:	85 e0       	ldi	r24, 0x05	; 5
 788:	f6 dc       	rcall	.-1556   	; 0x176 <SSD1306Device::ssd1306_send_command(unsigned char) [clone .constprop.8]>
loop():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:99
    oled.dimScreen();
    screenDimmed = true;
 78a:	a0 92 15 3f 	sts	0x3F15, r10	; 0x803f15 <screenDimmed>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:101

    if (totalSeconds == 0 && !resumeOperation) { // only if the screen is on and the counter is off continue
 78e:	80 91 0f 3f 	lds	r24, 0x3F0F	; 0x803f0f <totalSeconds>
 792:	90 91 10 3f 	lds	r25, 0x3F10	; 0x803f10 <totalSeconds+0x1>
 796:	89 2b       	or	r24, r25
 798:	09 f0       	breq	.+2      	; 0x79c <main+0x1b4>
 79a:	84 cf       	rjmp	.-248    	; 0x6a4 <main+0xbc>
 79c:	80 91 03 3f 	lds	r24, 0x3F03	; 0x803f03 <resumeOperation>
 7a0:	81 11       	cpse	r24, r1
 7a2:	80 cf       	rjmp	.-256    	; 0x6a4 <main+0xbc>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:102
      oled.clearScreen();
 7a4:	dc dc       	rcall	.-1608   	; 0x15e <SSD1306Device::clearScreen() [clone .constprop.9]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:104

      if (BATTCHR && !resumeOperation)  drawSprite(0, 3, chargingSprite, 8, 1, SPRITENORMAL);
 7a6:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <numbers+0x7f7479>
 7aa:	87 fd       	sbrc	r24, 7
 7ac:	0b c0       	rjmp	.+22     	; 0x7c4 <main+0x1dc>
 7ae:	80 91 03 3f 	lds	r24, 0x3F03	; 0x803f03 <resumeOperation>
 7b2:	81 11       	cpse	r24, r1
 7b4:	07 c0       	rjmp	.+14     	; 0x7c4 <main+0x1dc>
 7b6:	e1 2c       	mov	r14, r1
 7b8:	01 e0       	ldi	r16, 0x01	; 1
 7ba:	28 e0       	ldi	r18, 0x08	; 8
 7bc:	45 e7       	ldi	r20, 0x75	; 117
 7be:	5f e8       	ldi	r21, 0x8F	; 143
 7c0:	63 e0       	ldi	r22, 0x03	; 3
 7c2:	fd dc       	rcall	.-1542   	; 0x1be <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:106

      if (!BATTCHR && powerSaveMode < 240) drawAlwaysOnDisplay();// disable always on display if 4hs passed without pressing the button
 7c4:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <numbers+0x7f7479>
 7c8:	87 ff       	sbrs	r24, 7
 7ca:	2a c0       	rjmp	.+84     	; 0x820 <main+0x238>
 7cc:	80 91 0e 3f 	lds	r24, 0x3F0E	; 0x803f0e <powerSaveMode>
 7d0:	80 3f       	cpi	r24, 0xF0	; 240
 7d2:	30 f5       	brcc	.+76     	; 0x820 <main+0x238>
drawAlwaysOnDisplay():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:180
  resumeOperation = false;
}

void drawAlwaysOnDisplay(void) {

  if (readSupplyVoltage() < (MINVOLTAGE + 200)) enableAlwaysOn = false; // if voltage is below minvoltage + 200mha it disables allways on display.
 7d4:	cd dd       	rcall	.-1126   	; 0x370 <readSupplyVoltage()>
 7d6:	8c 3a       	cpi	r24, 0xAC	; 172
 7d8:	9d 40       	sbci	r25, 0x0D	; 13
 7da:	10 f4       	brcc	.+4      	; 0x7e0 <main+0x1f8>
 7dc:	10 92 0d 3f 	sts	0x3F0D, r1	; 0x803f0d <enableAlwaysOn>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:182

  if (enableAlwaysOn) {
 7e0:	80 91 0d 3f 	lds	r24, 0x3F0D	; 0x803f0d <enableAlwaysOn>
 7e4:	88 23       	and	r24, r24
 7e6:	e1 f0       	breq	.+56     	; 0x820 <main+0x238>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:184

    if (powerSaveMode < 240 && alwaysOn) powerSaveMode++;// after 4 hours if always on display is enable it disables it to save battery
 7e8:	80 91 0e 3f 	lds	r24, 0x3F0E	; 0x803f0e <powerSaveMode>
 7ec:	80 3f       	cpi	r24, 0xF0	; 240
 7ee:	38 f4       	brcc	.+14     	; 0x7fe <main+0x216>
 7f0:	90 91 0c 3f 	lds	r25, 0x3F0C	; 0x803f0c <alwaysOn>
 7f4:	99 23       	and	r25, r25
 7f6:	19 f0       	breq	.+6      	; 0x7fe <main+0x216>
 7f8:	8f 5f       	subi	r24, 0xFF	; 255
 7fa:	80 93 0e 3f 	sts	0x3F0E, r24	; 0x803f0e <powerSaveMode>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:186

    if (!alwaysOn) {
 7fe:	80 91 0c 3f 	lds	r24, 0x3F0C	; 0x803f0c <alwaysOn>
 802:	81 11       	cpse	r24, r1
 804:	06 c0       	rjmp	.+12     	; 0x812 <main+0x22a>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:187
      alwaysOn = true;
 806:	a0 92 0c 3f 	sts	0x3F0C, r10	; 0x803f0c <alwaysOn>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:188
      sleepDelayTimer = 0;
 80a:	10 92 01 3f 	sts	0x3F01, r1	; 0x803f01 <sleepDelayTimer>
 80e:	10 92 02 3f 	sts	0x3F02, r1	; 0x803f02 <sleepDelayTimer+0x1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:191
    }

    if (minutes % 2 == 0) { // in always on mode changes the display time position
 812:	80 91 0b 3f 	lds	r24, 0x3F0B	; 0x803f0b <minutes>
 816:	80 fd       	sbrc	r24, 0
 818:	8c c1       	rjmp	.+792    	; 0xb32 <main+0x54a>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:192
      displayTime(80, 16);
 81a:	60 e1       	ldi	r22, 0x10	; 16
 81c:	80 e5       	ldi	r24, 0x50	; 80
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:194
    } else {
      displayTime(64, 0);
 81e:	6b dd       	rcall	.-1322   	; 0x2f6 <displayTime(unsigned char, unsigned char)>
goToSleep():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:379
  while ((interruptTimer - timer) < 250 || BUTTONLOW); // super simple button debounce
  return true;
}

void goToSleep (void) {
  if (!BATTCHR && (!enableAlwaysOn || powerSaveMode >= 240)) oled.ssd1306_send_command(0xAE);
 820:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <numbers+0x7f7479>
 824:	87 ff       	sbrs	r24, 7
 826:	0a c0       	rjmp	.+20     	; 0x83c <main+0x254>
 828:	80 91 0d 3f 	lds	r24, 0x3F0D	; 0x803f0d <enableAlwaysOn>
 82c:	88 23       	and	r24, r24
 82e:	21 f0       	breq	.+8      	; 0x838 <main+0x250>
 830:	80 91 0e 3f 	lds	r24, 0x3F0E	; 0x803f0e <powerSaveMode>
 834:	80 3f       	cpi	r24, 0xF0	; 240
 836:	10 f0       	brcs	.+4      	; 0x83c <main+0x254>
 838:	8e ea       	ldi	r24, 0xAE	; 174
 83a:	9d dc       	rcall	.-1734   	; 0x176 <SSD1306Device::ssd1306_send_command(unsigned char) [clone .constprop.8]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:380
  shouldWakeUp = false;
 83c:	10 92 00 3f 	sts	0x3F00, r1	; 0x803f00 <__DATA_REGION_ORIGIN__>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:381
  PORTA.PIN6CTRL  |= PORT_ISC_FALLING_gc; //attach interrupt to portA pin 6 keeps pull up enabled
 840:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <numbers+0x7f7487>
 844:	83 60       	ori	r24, 0x03	; 3
 846:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <numbers+0x7f7487>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:382
  PORTA.PIN7CTRL  |= PORT_ISC_BOTHEDGES_gc;
 84a:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <numbers+0x7f7488>
 84e:	81 60       	ori	r24, 0x01	; 1
 850:	80 93 17 04 	sts	0x0417, r24	; 0x800417 <numbers+0x7f7488>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:383
  sleep_enable();
 854:	80 91 50 00 	lds	r24, 0x0050	; 0x800050 <numbers+0x7f70c1>
 858:	81 60       	ori	r24, 0x01	; 1
 85a:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <numbers+0x7f70c1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:384
  sleep_cpu();// go to sleep
 85e:	88 95       	sleep
 860:	21 cf       	rjmp	.-446    	; 0x6a4 <main+0xbc>
options():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:201
  }
}

void options (void) { // options menu
  int8_t option = 0;
  const uint8_t spriteOptionPos [] = {100, 70, 40, 10};
 862:	29 82       	std	Y+1, r2	; 0x01
 864:	3a 82       	std	Y+2, r3	; 0x02
 866:	4b 82       	std	Y+3, r4	; 0x03
 868:	5c 82       	std	Y+4, r5	; 0x04
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:203
  bool setOptions = true;
  oled.clearScreen();
 86a:	79 dc       	rcall	.-1806   	; 0x15e <SSD1306Device::clearScreen() [clone .constprop.9]>
 86c:	4d e6       	ldi	r20, 0x6D	; 109
 86e:	64 2e       	mov	r6, r20
 870:	4f e8       	ldi	r20, 0x8F	; 143
 872:	74 2e       	mov	r7, r20
 874:	ce 01       	movw	r24, r28
 876:	01 96       	adiw	r24, 0x01	; 1
 878:	6c 01       	movw	r12, r24
main():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:205

  for (uint8_t x = 0; x < 4; x++) {
 87a:	10 e0       	ldi	r17, 0x00	; 0
 87c:	4c 01       	movw	r8, r24
options():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:206
    drawSprite(spriteOptionPos [x], 1, optionSprites[x], 16, 2, !x);
 87e:	f3 01       	movw	r30, r6
 880:	41 91       	ld	r20, Z+
 882:	51 91       	ld	r21, Z+
 884:	3f 01       	movw	r6, r30
 886:	f6 01       	movw	r30, r12
 888:	81 91       	ld	r24, Z+
 88a:	6f 01       	movw	r12, r30
 88c:	ee 24       	eor	r14, r14
 88e:	e3 94       	inc	r14
 890:	11 11       	cpse	r17, r1
 892:	e1 2c       	mov	r14, r1
 894:	02 e0       	ldi	r16, 0x02	; 2
 896:	20 e1       	ldi	r18, 0x10	; 16
 898:	61 e0       	ldi	r22, 0x01	; 1
 89a:	91 dc       	rcall	.-1758   	; 0x1be <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:205
  int8_t option = 0;
  const uint8_t spriteOptionPos [] = {100, 70, 40, 10};
  bool setOptions = true;
  oled.clearScreen();

  for (uint8_t x = 0; x < 4; x++) {
 89c:	1f 5f       	subi	r17, 0xFF	; 255
 89e:	14 30       	cpi	r17, 0x04	; 4
 8a0:	71 f7       	brne	.-36     	; 0x87e <main+0x296>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:210
    drawSprite(spriteOptionPos [x], 1, optionSprites[x], 16, 2, !x);
    option++;
  }
  option = 0;
  buttonDebounce();
 8a2:	70 dc       	rcall	.-1824   	; 0x184 <buttonDebounce()>
main():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:209

  for (uint8_t x = 0; x < 4; x++) {
    drawSprite(spriteOptionPos [x], 1, optionSprites[x], 16, 2, !x);
    option++;
  }
  option = 0;
 8a4:	10 e0       	ldi	r17, 0x00	; 0
options():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:214
  buttonDebounce();

  while (setOptions) {

    if (buttonDebounce()) {
 8a6:	6e dc       	rcall	.-1828   	; 0x184 <buttonDebounce()>
 8a8:	d8 2e       	mov	r13, r24
 8aa:	88 23       	and	r24, r24
 8ac:	09 f4       	brne	.+2      	; 0x8b0 <main+0x2c8>
 8ae:	4a c0       	rjmp	.+148    	; 0x944 <main+0x35c>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:215
      drawSprite(spriteOptionPos [option], 1, optionSprites[option], 16, 2, SPRITENORMAL);
 8b0:	81 2f       	mov	r24, r17
 8b2:	01 2e       	mov	r0, r17
 8b4:	00 0c       	add	r0, r0
 8b6:	99 0b       	sbc	r25, r25
 8b8:	fc 01       	movw	r30, r24
 8ba:	ee 0f       	add	r30, r30
 8bc:	ff 1f       	adc	r31, r31
 8be:	e3 59       	subi	r30, 0x93	; 147
 8c0:	f0 47       	sbci	r31, 0x70	; 112
 8c2:	40 81       	ld	r20, Z
 8c4:	51 81       	ldd	r21, Z+1	; 0x01
 8c6:	88 0d       	add	r24, r8
 8c8:	99 1d       	adc	r25, r9
 8ca:	e1 2c       	mov	r14, r1
 8cc:	02 e0       	ldi	r16, 0x02	; 2
 8ce:	20 e1       	ldi	r18, 0x10	; 16
 8d0:	61 e0       	ldi	r22, 0x01	; 1
 8d2:	fc 01       	movw	r30, r24
 8d4:	80 81       	ld	r24, Z
 8d6:	73 dc       	rcall	.-1818   	; 0x1be <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:216
      if (option++, option > 3) {
 8d8:	1f 5f       	subi	r17, 0xFF	; 255
 8da:	14 30       	cpi	r17, 0x04	; 4
 8dc:	ac f5       	brge	.+106    	; 0x948 <main+0x360>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:219
        setOptions = false;
      } else {
        drawSprite(spriteOptionPos [option], 1, optionSprites[option], 16, 2, SPRITEINVERSECOLOR);
 8de:	81 2f       	mov	r24, r17
 8e0:	01 2e       	mov	r0, r17
 8e2:	00 0c       	add	r0, r0
 8e4:	99 0b       	sbc	r25, r25
 8e6:	fc 01       	movw	r30, r24
 8e8:	ee 0f       	add	r30, r30
 8ea:	ff 1f       	adc	r31, r31
 8ec:	e3 59       	subi	r30, 0x93	; 147
 8ee:	f0 47       	sbci	r31, 0x70	; 112
 8f0:	40 81       	ld	r20, Z
 8f2:	51 81       	ldd	r21, Z+1	; 0x01
 8f4:	88 0d       	add	r24, r8
 8f6:	99 1d       	adc	r25, r9
 8f8:	ee 24       	eor	r14, r14
 8fa:	e3 94       	inc	r14
 8fc:	20 e1       	ldi	r18, 0x10	; 16
 8fe:	61 e0       	ldi	r22, 0x01	; 1
 900:	fc 01       	movw	r30, r24
 902:	80 81       	ld	r24, Z
 904:	5c dc       	rcall	.-1864   	; 0x1be <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:223
      }
    }

    if ((interruptTimer - timer) > 2000) {
 906:	80 91 13 3f 	lds	r24, 0x3F13	; 0x803f13 <interruptTimer>
 90a:	90 91 14 3f 	lds	r25, 0x3F14	; 0x803f14 <interruptTimer+0x1>
 90e:	20 91 11 3f 	lds	r18, 0x3F11	; 0x803f11 <timer>
 912:	30 91 12 3f 	lds	r19, 0x3F12	; 0x803f12 <timer+0x1>
 916:	82 1b       	sub	r24, r18
 918:	93 0b       	sbc	r25, r19
 91a:	81 3d       	cpi	r24, 0xD1	; 209
 91c:	97 40       	sbci	r25, 0x07	; 7
 91e:	68 f0       	brcs	.+26     	; 0x93a <main+0x352>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:224
      timer = interruptTimer;
 920:	80 91 13 3f 	lds	r24, 0x3F13	; 0x803f13 <interruptTimer>
 924:	90 91 14 3f 	lds	r25, 0x3F14	; 0x803f14 <interruptTimer+0x1>
 928:	80 93 11 3f 	sts	0x3F11, r24	; 0x803f11 <timer>
 92c:	90 93 12 3f 	sts	0x3F12, r25	; 0x803f12 <timer+0x1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:225
      switch (option) { // option select menu.
 930:	11 30       	cpi	r17, 0x01	; 1
 932:	d1 f0       	breq	.+52     	; 0x968 <main+0x380>
 934:	5c f4       	brge	.+22     	; 0x94c <main+0x364>
 936:	11 23       	and	r17, r17
 938:	a9 f0       	breq	.+42     	; 0x964 <main+0x37c>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:212
    option++;
  }
  option = 0;
  buttonDebounce();

  while (setOptions) {
 93a:	d1 10       	cpse	r13, r1
 93c:	b4 cf       	rjmp	.-152    	; 0x8a6 <main+0x2be>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:245
          setOptions = false;
          break;
      }
    }
  }
  resumeOperation = true;
 93e:	f0 92 03 3f 	sts	0x3F03, r15	; 0x803f03 <resumeOperation>
 942:	05 cf       	rjmp	.-502    	; 0x74e <main+0x166>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:214
  option = 0;
  buttonDebounce();

  while (setOptions) {

    if (buttonDebounce()) {
 944:	db 2c       	mov	r13, r11
 946:	df cf       	rjmp	.-66     	; 0x906 <main+0x31e>
main():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:217
      drawSprite(spriteOptionPos [option], 1, optionSprites[option], 16, 2, SPRITENORMAL);
      if (option++, option > 3) {
        setOptions = false;
 948:	d1 2c       	mov	r13, r1
 94a:	dd cf       	rjmp	.-70     	; 0x906 <main+0x31e>
options():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:225
      }
    }

    if ((interruptTimer - timer) > 2000) {
      timer = interruptTimer;
      switch (option) { // option select menu.
 94c:	12 30       	cpi	r17, 0x02	; 2
 94e:	09 f4       	brne	.+2      	; 0x952 <main+0x36a>
 950:	5d c0       	rjmp	.+186    	; 0xa0c <main+0x424>
 952:	13 30       	cpi	r17, 0x03	; 3
 954:	91 f7       	brne	.-28     	; 0x93a <main+0x352>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:239
        case 2:// set time
          setTime();
          setOptions = false;
          break;
        case 3:
          enableAlwaysOn = !enableAlwaysOn;
 956:	80 91 0d 3f 	lds	r24, 0x3F0D	; 0x803f0d <enableAlwaysOn>
 95a:	f1 e0       	ldi	r31, 0x01	; 1
 95c:	8f 27       	eor	r24, r31
 95e:	80 93 0d 3f 	sts	0x3F0D, r24	; 0x803f0d <enableAlwaysOn>
 962:	ed cf       	rjmp	.-38     	; 0x93e <main+0x356>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:227

    if ((interruptTimer - timer) > 2000) {
      timer = interruptTimer;
      switch (option) { // option select menu.
        case 0:// led on
          ledON();
 964:	a7 dd       	rcall	.-1202   	; 0x4b4 <ledON()>
 966:	eb cf       	rjmp	.-42     	; 0x93e <main+0x356>
setTimer():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:249
  }
  resumeOperation = true;
}

void setTimer(void) {
  oled.clearScreen();
 968:	fa db       	rcall	.-2060   	; 0x15e <SSD1306Device::clearScreen() [clone .constprop.9]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:250
  drawSprite(28, 0, arrow, 8, 1, SPRITENORMAL);
 96a:	e1 2c       	mov	r14, r1
 96c:	01 e0       	ldi	r16, 0x01	; 1
 96e:	28 e0       	ldi	r18, 0x08	; 8
 970:	45 e6       	ldi	r20, 0x65	; 101
 972:	5f e8       	ldi	r21, 0x8F	; 143
 974:	60 e0       	ldi	r22, 0x00	; 0
 976:	8c e1       	ldi	r24, 0x1C	; 28
 978:	22 dc       	rcall	.-1980   	; 0x1be <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:251
  drawTime(0, 1, 32, 0);
 97a:	40 e0       	ldi	r20, 0x00	; 0
 97c:	60 e2       	ldi	r22, 0x20	; 32
 97e:	80 e0       	ldi	r24, 0x00	; 0
 980:	62 dc       	rcall	.-1852   	; 0x246 <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:252
  totalSeconds = 0;
 982:	10 92 0f 3f 	sts	0x3F0F, r1	; 0x803f0f <totalSeconds>
 986:	10 92 10 3f 	sts	0x3F10, r1	; 0x803f10 <totalSeconds+0x1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:257
  bool setCurrentTimer = true;

  while (setCurrentTimer) {

    if (BUTTONLOW) {
 98a:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <numbers+0x7f7479>
 98e:	86 fd       	sbrc	r24, 6
 990:	22 c0       	rjmp	.+68     	; 0x9d6 <main+0x3ee>
 992:	80 91 0f 3f 	lds	r24, 0x3F0F	; 0x803f0f <totalSeconds>
 996:	90 91 10 3f 	lds	r25, 0x3F10	; 0x803f10 <totalSeconds+0x1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:258
      timer = interruptTimer;
 99a:	20 91 13 3f 	lds	r18, 0x3F13	; 0x803f13 <interruptTimer>
 99e:	30 91 14 3f 	lds	r19, 0x3F14	; 0x803f14 <interruptTimer+0x1>
 9a2:	20 93 11 3f 	sts	0x3F11, r18	; 0x803f11 <timer>
 9a6:	30 93 12 3f 	sts	0x3F12, r19	; 0x803f12 <timer+0x1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:260

      if (totalSeconds += 300, totalSeconds > 1800) totalSeconds = 0;
 9aa:	84 5d       	subi	r24, 0xD4	; 212
 9ac:	9e 4f       	sbci	r25, 0xFE	; 254
 9ae:	89 30       	cpi	r24, 0x09	; 9
 9b0:	27 e0       	ldi	r18, 0x07	; 7
 9b2:	92 07       	cpc	r25, r18
 9b4:	30 f5       	brcc	.+76     	; 0xa02 <main+0x41a>
 9b6:	80 93 0f 3f 	sts	0x3F0F, r24	; 0x803f0f <totalSeconds>
 9ba:	90 93 10 3f 	sts	0x3F10, r25	; 0x803f10 <totalSeconds+0x1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:261
      drawTime(0, 1, 32, (totalSeconds / 60));
 9be:	80 91 0f 3f 	lds	r24, 0x3F0F	; 0x803f0f <totalSeconds>
 9c2:	90 91 10 3f 	lds	r25, 0x3F10	; 0x803f10 <totalSeconds+0x1>
 9c6:	6c e3       	ldi	r22, 0x3C	; 60
 9c8:	70 e0       	ldi	r23, 0x00	; 0
 9ca:	c3 d0       	rcall	.+390    	; 0xb52 <__udivmodhi4>
 9cc:	46 2f       	mov	r20, r22
 9ce:	60 e2       	ldi	r22, 0x20	; 32
 9d0:	80 e0       	ldi	r24, 0x00	; 0
 9d2:	39 dc       	rcall	.-1934   	; 0x246 <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:262
      buttonDebounce();
 9d4:	d7 db       	rcall	.-2130   	; 0x184 <buttonDebounce()>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:265
    }

    if ((interruptTimer - timer) > 2000) {
 9d6:	80 91 13 3f 	lds	r24, 0x3F13	; 0x803f13 <interruptTimer>
 9da:	90 91 14 3f 	lds	r25, 0x3F14	; 0x803f14 <interruptTimer+0x1>
 9de:	20 91 11 3f 	lds	r18, 0x3F11	; 0x803f11 <timer>
 9e2:	30 91 12 3f 	lds	r19, 0x3F12	; 0x803f12 <timer+0x1>
 9e6:	82 1b       	sub	r24, r18
 9e8:	93 0b       	sbc	r25, r19
 9ea:	81 3d       	cpi	r24, 0xD1	; 209
 9ec:	97 40       	sbci	r25, 0x07	; 7
 9ee:	68 f2       	brcs	.-102    	; 0x98a <main+0x3a2>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:270
      //timer = interruptTimer;
      setCurrentTimer = false;
    }
  }
  totalSecondsTimer = totalSeconds;
 9f0:	80 91 0f 3f 	lds	r24, 0x3F0F	; 0x803f0f <totalSeconds>
 9f4:	90 91 10 3f 	lds	r25, 0x3F10	; 0x803f10 <totalSeconds+0x1>
 9f8:	80 93 07 3f 	sts	0x3F07, r24	; 0x803f07 <totalSecondsTimer>
 9fc:	90 93 08 3f 	sts	0x3F08, r25	; 0x803f08 <totalSecondsTimer+0x1>
 a00:	9e cf       	rjmp	.-196    	; 0x93e <main+0x356>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:260
  while (setCurrentTimer) {

    if (BUTTONLOW) {
      timer = interruptTimer;

      if (totalSeconds += 300, totalSeconds > 1800) totalSeconds = 0;
 a02:	10 92 0f 3f 	sts	0x3F0F, r1	; 0x803f0f <totalSeconds>
 a06:	10 92 10 3f 	sts	0x3F10, r1	; 0x803f10 <totalSeconds+0x1>
 a0a:	d9 cf       	rjmp	.-78     	; 0x9be <main+0x3d6>
setTime():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:274
  }
  totalSecondsTimer = totalSeconds;
}

void setTime(void) {
  oled.clearScreen();
 a0c:	a8 db       	rcall	.-2224   	; 0x15e <SSD1306Device::clearScreen() [clone .constprop.9]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:275
  alwaysOn = true;
 a0e:	f0 92 0c 3f 	sts	0x3F0C, r15	; 0x803f0c <alwaysOn>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:277
  uint8_t arrowPos = 104;
  drawSprite(arrowPos, 0, arrow, 8, 1, SPRITENORMAL); // sleep
 a12:	e1 2c       	mov	r14, r1
 a14:	01 e0       	ldi	r16, 0x01	; 1
 a16:	28 e0       	ldi	r18, 0x08	; 8
 a18:	45 e6       	ldi	r20, 0x65	; 101
 a1a:	5f e8       	ldi	r21, 0x8F	; 143
 a1c:	60 e0       	ldi	r22, 0x00	; 0
 a1e:	88 e6       	ldi	r24, 0x68	; 104
 a20:	ce db       	rcall	.-2148   	; 0x1be <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)>
main():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:276
}

void setTime(void) {
  oled.clearScreen();
  alwaysOn = true;
  uint8_t arrowPos = 104;
 a22:	18 e6       	ldi	r17, 0x68	; 104
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:279
  drawSprite(arrowPos, 0, arrow, 8, 1, SPRITENORMAL); // sleep

  for (uint8_t x = 0; x < 3 ; x++) {
 a24:	d1 2c       	mov	r13, r1
setTime():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:281
    bool setCurrentTime = true;
    drawTime(90, 1, 18, hours);
 a26:	40 91 0a 3f 	lds	r20, 0x3F0A	; 0x803f0a <hours>
 a2a:	62 e1       	ldi	r22, 0x12	; 18
 a2c:	8a e5       	ldi	r24, 0x5A	; 90
 a2e:	0b dc       	rcall	.-2026   	; 0x246 <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:282
    drawTime(46, 1, 18, minutes);
 a30:	40 91 0b 3f 	lds	r20, 0x3F0B	; 0x803f0b <minutes>
 a34:	62 e1       	ldi	r22, 0x12	; 18
 a36:	8e e2       	ldi	r24, 0x2E	; 46
 a38:	06 dc       	rcall	.-2036   	; 0x246 <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:283
    drawTime(0, 1, 18, seconds);
 a3a:	40 91 09 3f 	lds	r20, 0x3F09	; 0x803f09 <seconds>
 a3e:	62 e1       	ldi	r22, 0x12	; 18
 a40:	80 e0       	ldi	r24, 0x00	; 0
 a42:	01 dc       	rcall	.-2046   	; 0x246 <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:287

    while (setCurrentTime) {

      if ((interruptTimer - timer) > 240 && BUTTONLOW) {
 a44:	80 91 13 3f 	lds	r24, 0x3F13	; 0x803f13 <interruptTimer>
 a48:	90 91 14 3f 	lds	r25, 0x3F14	; 0x803f14 <interruptTimer+0x1>
 a4c:	20 91 11 3f 	lds	r18, 0x3F11	; 0x803f11 <timer>
 a50:	30 91 12 3f 	lds	r19, 0x3F12	; 0x803f12 <timer+0x1>
 a54:	82 1b       	sub	r24, r18
 a56:	93 0b       	sbc	r25, r19
 a58:	81 3f       	cpi	r24, 0xF1	; 241
 a5a:	91 05       	cpc	r25, r1
 a5c:	f8 f0       	brcs	.+62     	; 0xa9c <main+0x4b4>
 a5e:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <numbers+0x7f7479>
 a62:	86 fd       	sbrc	r24, 6
 a64:	1b c0       	rjmp	.+54     	; 0xa9c <main+0x4b4>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:288
        timer = interruptTimer;
 a66:	80 91 13 3f 	lds	r24, 0x3F13	; 0x803f13 <interruptTimer>
 a6a:	90 91 14 3f 	lds	r25, 0x3F14	; 0x803f14 <interruptTimer+0x1>
 a6e:	80 93 11 3f 	sts	0x3F11, r24	; 0x803f11 <timer>
 a72:	90 93 12 3f 	sts	0x3F12, r25	; 0x803f12 <timer+0x1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:290

        switch (x) {
 a76:	f1 e0       	ldi	r31, 0x01	; 1
 a78:	df 16       	cp	r13, r31
 a7a:	e9 f1       	breq	.+122    	; 0xaf6 <main+0x50e>
 a7c:	22 e0       	ldi	r18, 0x02	; 2
 a7e:	d2 16       	cp	r13, r18
 a80:	09 f4       	brne	.+2      	; 0xa84 <main+0x49c>
 a82:	48 c0       	rjmp	.+144    	; 0xb14 <main+0x52c>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:293
          case 0:

            if (hours++, hours > 23) hours = 0;
 a84:	80 91 0a 3f 	lds	r24, 0x3F0A	; 0x803f0a <hours>
 a88:	8f 5f       	subi	r24, 0xFF	; 255
 a8a:	88 31       	cpi	r24, 0x18	; 24
 a8c:	88 f5       	brcc	.+98     	; 0xaf0 <main+0x508>
 a8e:	80 93 0a 3f 	sts	0x3F0A, r24	; 0x803f0a <hours>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:294
            drawTime(90, 1, 18, hours);
 a92:	40 91 0a 3f 	lds	r20, 0x3F0A	; 0x803f0a <hours>
 a96:	62 e1       	ldi	r22, 0x12	; 18
 a98:	8a e5       	ldi	r24, 0x5A	; 90
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:305
            break;

          case 2:

            if (seconds++, seconds > 59) seconds = 0;
            drawTime(0, 1, 18, seconds);
 a9a:	d5 db       	rcall	.-2134   	; 0x246 <drawTime(unsigned char, unsigned char, unsigned char, signed char) [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:310
            break;
        }
      }

      if ((interruptTimer - timer) > 2500) {
 a9c:	80 91 13 3f 	lds	r24, 0x3F13	; 0x803f13 <interruptTimer>
 aa0:	90 91 14 3f 	lds	r25, 0x3F14	; 0x803f14 <interruptTimer+0x1>
 aa4:	20 91 11 3f 	lds	r18, 0x3F11	; 0x803f11 <timer>
 aa8:	30 91 12 3f 	lds	r19, 0x3F12	; 0x803f12 <timer+0x1>
 aac:	82 1b       	sub	r24, r18
 aae:	93 0b       	sbc	r25, r19
 ab0:	85 3c       	cpi	r24, 0xC5	; 197
 ab2:	99 40       	sbci	r25, 0x09	; 9
 ab4:	38 f2       	brcs	.-114    	; 0xa44 <main+0x45c>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:311
        timer = interruptTimer;
 ab6:	80 91 13 3f 	lds	r24, 0x3F13	; 0x803f13 <interruptTimer>
 aba:	90 91 14 3f 	lds	r25, 0x3F14	; 0x803f14 <interruptTimer+0x1>
 abe:	80 93 11 3f 	sts	0x3F11, r24	; 0x803f11 <timer>
 ac2:	90 93 12 3f 	sts	0x3F12, r25	; 0x803f12 <timer+0x1>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:312
        oled.drawLine(0, 0, 127, 0b00000000);
 ac6:	20 e0       	ldi	r18, 0x00	; 0
 ac8:	4f e7       	ldi	r20, 0x7F	; 127
 aca:	60 e0       	ldi	r22, 0x00	; 0
 acc:	80 e0       	ldi	r24, 0x00	; 0
 ace:	35 db       	rcall	.-2454   	; 0x13a <SSD1306Device::drawLine(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.11]>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:313
        arrowPos -= 44;
 ad0:	1c 52       	subi	r17, 0x2C	; 44
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:314
        drawSprite(arrowPos, 0, arrow, 8, 1, SPRITENORMAL);
 ad2:	e1 2c       	mov	r14, r1
 ad4:	01 e0       	ldi	r16, 0x01	; 1
 ad6:	28 e0       	ldi	r18, 0x08	; 8
 ad8:	45 e6       	ldi	r20, 0x65	; 101
 ada:	5f e8       	ldi	r21, 0x8F	; 143
 adc:	60 e0       	ldi	r22, 0x00	; 0
 ade:	81 2f       	mov	r24, r17
 ae0:	6e db       	rcall	.-2340   	; 0x1be <drawSprite(unsigned char, unsigned char, unsigned char*, unsigned char, unsigned char, bool)>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:279
  oled.clearScreen();
  alwaysOn = true;
  uint8_t arrowPos = 104;
  drawSprite(arrowPos, 0, arrow, 8, 1, SPRITENORMAL); // sleep

  for (uint8_t x = 0; x < 3 ; x++) {
 ae2:	d3 94       	inc	r13
 ae4:	14 3e       	cpi	r17, 0xE4	; 228
 ae6:	09 f0       	breq	.+2      	; 0xaea <main+0x502>
 ae8:	9e cf       	rjmp	.-196    	; 0xa26 <main+0x43e>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:319
        drawSprite(arrowPos, 0, arrow, 8, 1, SPRITENORMAL);
        setCurrentTime = false;
      }
    }
  }
  alwaysOn = false;
 aea:	10 92 0c 3f 	sts	0x3F0C, r1	; 0x803f0c <alwaysOn>
 aee:	27 cf       	rjmp	.-434    	; 0x93e <main+0x356>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:293
        timer = interruptTimer;

        switch (x) {
          case 0:

            if (hours++, hours > 23) hours = 0;
 af0:	10 92 0a 3f 	sts	0x3F0A, r1	; 0x803f0a <hours>
 af4:	ce cf       	rjmp	.-100    	; 0xa92 <main+0x4aa>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:298
            drawTime(90, 1, 18, hours);
            break;
          case 1:

            if (minutes++, minutes > 59) minutes = 0;
 af6:	80 91 0b 3f 	lds	r24, 0x3F0B	; 0x803f0b <minutes>
 afa:	8f 5f       	subi	r24, 0xFF	; 255
 afc:	8c 33       	cpi	r24, 0x3C	; 60
 afe:	38 f4       	brcc	.+14     	; 0xb0e <main+0x526>
 b00:	80 93 0b 3f 	sts	0x3F0B, r24	; 0x803f0b <minutes>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:299
            drawTime(46, 1, 18, minutes);
 b04:	40 91 0b 3f 	lds	r20, 0x3F0B	; 0x803f0b <minutes>
 b08:	62 e1       	ldi	r22, 0x12	; 18
 b0a:	8e e2       	ldi	r24, 0x2E	; 46
 b0c:	c6 cf       	rjmp	.-116    	; 0xa9a <main+0x4b2>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:298
            if (hours++, hours > 23) hours = 0;
            drawTime(90, 1, 18, hours);
            break;
          case 1:

            if (minutes++, minutes > 59) minutes = 0;
 b0e:	10 92 0b 3f 	sts	0x3F0B, r1	; 0x803f0b <minutes>
 b12:	f8 cf       	rjmp	.-16     	; 0xb04 <main+0x51c>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:304
            drawTime(46, 1, 18, minutes);
            break;

          case 2:

            if (seconds++, seconds > 59) seconds = 0;
 b14:	80 91 09 3f 	lds	r24, 0x3F09	; 0x803f09 <seconds>
 b18:	8f 5f       	subi	r24, 0xFF	; 255
 b1a:	8c 33       	cpi	r24, 0x3C	; 60
 b1c:	38 f4       	brcc	.+14     	; 0xb2c <main+0x544>
 b1e:	80 93 09 3f 	sts	0x3F09, r24	; 0x803f09 <seconds>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:305
            drawTime(0, 1, 18, seconds);
 b22:	40 91 09 3f 	lds	r20, 0x3F09	; 0x803f09 <seconds>
 b26:	62 e1       	ldi	r22, 0x12	; 18
 b28:	80 e0       	ldi	r24, 0x00	; 0
 b2a:	b7 cf       	rjmp	.-146    	; 0xa9a <main+0x4b2>
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:304
            drawTime(46, 1, 18, minutes);
            break;

          case 2:

            if (seconds++, seconds > 59) seconds = 0;
 b2c:	10 92 09 3f 	sts	0x3F09, r1	; 0x803f09 <seconds>
 b30:	f8 cf       	rjmp	.-16     	; 0xb22 <main+0x53a>
drawAlwaysOnDisplay():
C:\Users\gross\OneDrive\Arduino\Game_Light\Watch\Game_Light_watch_3.4/Game_Light_watch_3.4.ino:194
    }

    if (minutes % 2 == 0) { // in always on mode changes the display time position
      displayTime(80, 16);
    } else {
      displayTime(64, 0);
 b32:	60 e0       	ldi	r22, 0x00	; 0
 b34:	80 e4       	ldi	r24, 0x40	; 64
 b36:	73 ce       	rjmp	.-794    	; 0x81e <main+0x236>

00000b38 <__divmodqi4>:
__divmodqi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1366
 b38:	87 fb       	bst	r24, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1367
 b3a:	08 2e       	mov	r0, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1368
 b3c:	06 26       	eor	r0, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1369
 b3e:	87 fd       	sbrc	r24, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1370
 b40:	81 95       	neg	r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1371
 b42:	67 fd       	sbrc	r22, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1372
 b44:	61 95       	neg	r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1373
 b46:	6d d0       	rcall	.+218    	; 0xc22 <__udivmodqi4>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1374
 b48:	0e f4       	brtc	.+2      	; 0xb4c <__divmodqi4_1>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1375
 b4a:	91 95       	neg	r25

00000b4c <__divmodqi4_1>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1377
 b4c:	07 fc       	sbrc	r0, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1378
 b4e:	81 95       	neg	r24

00000b50 <__divmodqi4_exit>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1380
 b50:	08 95       	ret

00000b52 <__udivmodhi4>:
__udivmodhi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
 b52:	aa 1b       	sub	r26, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
 b54:	bb 1b       	sub	r27, r27
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
 b56:	51 e1       	ldi	r21, 0x11	; 17
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
 b58:	07 c0       	rjmp	.+14     	; 0xb68 <__udivmodhi4_ep>

00000b5a <__udivmodhi4_loop>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
 b5a:	aa 1f       	adc	r26, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
 b5c:	bb 1f       	adc	r27, r27
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
 b5e:	a6 17       	cp	r26, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
 b60:	b7 07       	cpc	r27, r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
 b62:	10 f0       	brcs	.+4      	; 0xb68 <__udivmodhi4_ep>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
 b64:	a6 1b       	sub	r26, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
 b66:	b7 0b       	sbc	r27, r23

00000b68 <__udivmodhi4_ep>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
 b68:	88 1f       	adc	r24, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
 b6a:	99 1f       	adc	r25, r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
 b6c:	5a 95       	dec	r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
 b6e:	a9 f7       	brne	.-22     	; 0xb5a <__udivmodhi4_loop>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
 b70:	80 95       	com	r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
 b72:	90 95       	com	r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
 b74:	bc 01       	movw	r22, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
 b76:	cd 01       	movw	r24, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
 b78:	08 95       	ret

00000b7a <__udivmodsi4>:
__udivmodsi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
 b7a:	a1 e2       	ldi	r26, 0x21	; 33
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
 b7c:	1a 2e       	mov	r1, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
 b7e:	aa 1b       	sub	r26, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
 b80:	bb 1b       	sub	r27, r27
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
 b82:	fd 01       	movw	r30, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
 b84:	0d c0       	rjmp	.+26     	; 0xba0 <__udivmodsi4_ep>

00000b86 <__udivmodsi4_loop>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
 b86:	aa 1f       	adc	r26, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
 b88:	bb 1f       	adc	r27, r27
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
 b8a:	ee 1f       	adc	r30, r30
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
 b8c:	ff 1f       	adc	r31, r31
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
 b8e:	a2 17       	cp	r26, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
 b90:	b3 07       	cpc	r27, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
 b92:	e4 07       	cpc	r30, r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
 b94:	f5 07       	cpc	r31, r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
 b96:	20 f0       	brcs	.+8      	; 0xba0 <__udivmodsi4_ep>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
 b98:	a2 1b       	sub	r26, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
 b9a:	b3 0b       	sbc	r27, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
 b9c:	e4 0b       	sbc	r30, r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
 b9e:	f5 0b       	sbc	r31, r21

00000ba0 <__udivmodsi4_ep>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
 ba0:	66 1f       	adc	r22, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
 ba2:	77 1f       	adc	r23, r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
 ba4:	88 1f       	adc	r24, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
 ba6:	99 1f       	adc	r25, r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
 ba8:	1a 94       	dec	r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
 baa:	69 f7       	brne	.-38     	; 0xb86 <__udivmodsi4_loop>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
 bac:	60 95       	com	r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
 bae:	70 95       	com	r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
 bb0:	80 95       	com	r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
 bb2:	90 95       	com	r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
 bb4:	9b 01       	movw	r18, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
 bb6:	ac 01       	movw	r20, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
 bb8:	bd 01       	movw	r22, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
 bba:	cf 01       	movw	r24, r30
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
 bbc:	08 95       	ret

00000bbe <__divmodsi4>:
__divmodsi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
 bbe:	05 2e       	mov	r0, r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
 bc0:	97 fb       	bst	r25, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
 bc2:	16 f4       	brtc	.+4      	; 0xbc8 <__divmodsi4+0xa>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
 bc4:	00 94       	com	r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
 bc6:	0f d0       	rcall	.+30     	; 0xbe6 <__negsi2>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
 bc8:	57 fd       	sbrc	r21, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1693
 bca:	05 d0       	rcall	.+10     	; 0xbd6 <__divmodsi4_neg2>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
 bcc:	d6 df       	rcall	.-84     	; 0xb7a <__udivmodsi4>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
 bce:	07 fc       	sbrc	r0, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1696
 bd0:	02 d0       	rcall	.+4      	; 0xbd6 <__divmodsi4_neg2>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
 bd2:	46 f4       	brtc	.+16     	; 0xbe4 <__divmodsi4_exit>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
 bd4:	08 c0       	rjmp	.+16     	; 0xbe6 <__negsi2>

00000bd6 <__divmodsi4_neg2>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
 bd6:	50 95       	com	r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
 bd8:	40 95       	com	r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
 bda:	30 95       	com	r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
 bdc:	21 95       	neg	r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
 bde:	3f 4f       	sbci	r19, 0xFF	; 255
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
 be0:	4f 4f       	sbci	r20, 0xFF	; 255
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
 be2:	5f 4f       	sbci	r21, 0xFF	; 255

00000be4 <__divmodsi4_exit>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
 be4:	08 95       	ret

00000be6 <__negsi2>:
__negsi2():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
 be6:	90 95       	com	r25
 be8:	80 95       	com	r24
 bea:	70 95       	com	r23
 bec:	61 95       	neg	r22
 bee:	7f 4f       	sbci	r23, 0xFF	; 255
 bf0:	8f 4f       	sbci	r24, 0xFF	; 255
 bf2:	9f 4f       	sbci	r25, 0xFF	; 255
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
 bf4:	08 95       	ret

00000bf6 <__umulhisi3>:
__umulhisi3():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:564
 bf6:	a2 9f       	mul	r26, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:565
 bf8:	b0 01       	movw	r22, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:566
 bfa:	b3 9f       	mul	r27, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:567
 bfc:	c0 01       	movw	r24, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:568
 bfe:	a3 9f       	mul	r26, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:578
 c00:	01 d0       	rcall	.+2      	; 0xc04 <__umulhisi3+0xe>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:580
 c02:	b2 9f       	mul	r27, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:581
 c04:	70 0d       	add	r23, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:582
 c06:	81 1d       	adc	r24, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:583
 c08:	11 24       	eor	r1, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:584
 c0a:	91 1d       	adc	r25, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:585
 c0c:	08 95       	ret

00000c0e <__muluhisi3>:
__muluhisi3():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:626
 c0e:	f3 df       	rcall	.-26     	; 0xbf6 <__umulhisi3>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:627
 c10:	a5 9f       	mul	r26, r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:628
 c12:	90 0d       	add	r25, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:629
 c14:	b4 9f       	mul	r27, r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:630
 c16:	90 0d       	add	r25, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:631
 c18:	a4 9f       	mul	r26, r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:632
 c1a:	80 0d       	add	r24, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:633
 c1c:	91 1d       	adc	r25, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:634
 c1e:	11 24       	eor	r1, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:635
 c20:	08 95       	ret

00000c22 <__udivmodqi4>:
__udivmodqi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1346
 c22:	99 1b       	sub	r25, r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1347
 c24:	79 e0       	ldi	r23, 0x09	; 9
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1348
 c26:	04 c0       	rjmp	.+8      	; 0xc30 <__udivmodqi4_ep>

00000c28 <__udivmodqi4_loop>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1350
 c28:	99 1f       	adc	r25, r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1351
 c2a:	96 17       	cp	r25, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1352
 c2c:	08 f0       	brcs	.+2      	; 0xc30 <__udivmodqi4_ep>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1353
 c2e:	96 1b       	sub	r25, r22

00000c30 <__udivmodqi4_ep>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1355
 c30:	88 1f       	adc	r24, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1356
 c32:	7a 95       	dec	r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1357
 c34:	c9 f7       	brne	.-14     	; 0xc28 <__udivmodqi4_loop>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1358
 c36:	80 95       	com	r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:1360
 c38:	08 95       	ret

00000c3a <_exit>:
exit():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
 c3a:	f8 94       	cli

00000c3c <__stop_program>:
__stop_program():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/short-calls/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
 c3c:	ff cf       	rjmp	.-2      	; 0xc3c <__stop_program>
